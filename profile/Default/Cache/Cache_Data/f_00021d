{"version":3,"file":"2394.31bc11f1784d36da1fc6.js","mappings":"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Q,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KACxF,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KACxF,GAAQ,KAA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","sources":["webpack://telegram-t/./src/lib/secret-sauce/utils.ts","webpack://telegram-t/./src/lib/secret-sauce/parseSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/buildSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/blacksilence.ts","webpack://telegram-t/./src/lib/secret-sauce/secretsauce.ts","webpack://telegram-t/./src/lib/secret-sauce/p2p.ts","webpack://telegram-t/./src/global/actions/api/calls.async.ts","webpack://telegram-t/./src/util/phoneCallEmojiConstants.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/calls.async.ts","webpack://telegram-t/./src/components/calls/group/helpers/formatGroupCallVolume.ts","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantMenu.tsx","webpack://telegram-t/./src/hooks/useRunThrottled.ts","webpack://telegram-t/./src/components/calls/group/OutlinedMicrophoneIcon.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipant.module.scss?2375","webpack://telegram-t/./src/components/calls/group/GroupCallParticipant.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantList.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantList.module.scss?6462","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantVideo.module.scss?799e","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantVideo.tsx","webpack://telegram-t/./src/util/vibrate.ts","webpack://telegram-t/./src/components/calls/group/MicrophoneButton.module.scss?3a9a","webpack://telegram-t/./src/components/calls/group/MicrophoneButton.tsx","webpack://telegram-t/./src/components/calls/group/GroupCall.module.scss?4417","webpack://telegram-t/./src/components/calls/group/GroupCall.tsx","webpack://telegram-t/./src/components/calls/group/hooks/useGroupCallVideoLayout.ts","webpack://telegram-t/./src/components/calls/ActiveCallHeader.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.module.scss?9dea","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCall.module.scss?a250","webpack://telegram-t/./src/components/calls/phone/PhoneCall.tsx","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.module.scss?64f6","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.tsx","webpack://telegram-t/./src/bundles/calls.ts"],"sourcesContent":["import type { P2PPayloadType } from './p2pMessage';\nimport type { PayloadType } from './types';\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n  if (!array) return 0;\n\n  const { length } = array;\n  let total = 0;\n  for (let i = 0; i < length; i++) {\n    total += array[i] * array[i];\n  }\n  const rms = Math.sqrt(total / length) / 255;\n\n  return Math.min(1, rms * scale);\n}\n\nexport function p2pPayloadTypeToConference(p: P2PPayloadType): PayloadType {\n  return {\n    id: p.id,\n    name: p.name,\n    'rtcp-fbs': p.feedbackTypes,\n    clockrate: p.clockrate,\n    parameters: p.parameters,\n    channels: p.channels,\n  };\n}\n\nexport function isRelayAddress(candidate: string) {\n  const parts = candidate.split(' ');\n  return parts.some((part) => part === 'relay');\n}\n\nexport function removeRelatedAddress(candidate: string) {\n  const parts = candidate.split(' ');\n\n  const raddrIndex = parts.indexOf('raddr');\n  if (raddrIndex !== -1) {\n    parts.splice(raddrIndex, 2);\n  }\n\n  const rportIndex = parts.indexOf('rport');\n  if (rportIndex !== -1) {\n    parts.splice(rportIndex, 2);\n  }\n\n  return parts.join(' ');\n}\n\nexport const THRESHOLD = 0.1;\n\nexport const IS_SCREENSHARE_SUPPORTED = 'getDisplayMedia' in (navigator?.mediaDevices || {});\nexport const IS_ECHO_CANCELLATION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().echoCancellation;\n// @ts-ignore\nexport const IS_NOISE_SUPPRESSION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().noiseSuppression;\n","import { toTelegramSource } from './utils';\nimport type { JoinGroupCallPayload, SsrcGroup } from './types';\n\nexport default (sessionDescription: RTCSessionDescriptionInit, isP2p = false): JoinGroupCallPayload => {\n  if (!sessionDescription || !sessionDescription.sdp) {\n    throw Error('Failed parsing SDP: session description is null');\n  }\n\n  const sections = sessionDescription\n    .sdp\n    .split('\\r\\nm=')\n    .map((s, i) => (i === 0 ? s : `m=${s}`))\n    .reduce((acc: Record<string, string[]>, el) => {\n      const name = el.match(/^m=(.+?)\\s/)?.[1] || 'header';\n      acc[acc.hasOwnProperty(name) && name === 'video' ? 'screencast' : name] = el.split('\\r\\n').filter(Boolean);\n      return acc;\n    }, {});\n\n  const lookup = (prefix: string, sectionName?: string) => {\n    if (!sectionName) {\n      return Object.values(sections).map((section) => {\n        return section.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n      }).filter(Boolean)[0];\n    } else {\n      return sections[sectionName]?.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n    }\n  };\n\n  const parseExtmaps = (sectionName: string) => {\n    return sections[sectionName].filter((l) => l.startsWith('a=extmap')).map((l) => {\n      const [, id, uri] = l.match(/extmap:(\\d+)(?:\\/.+)?\\s(.+)/)!;\n      return { id: Number(id), uri };\n    });\n  };\n\n  const parsePayloadTypes = (sectionName: string) => {\n    const payloads = sections[sectionName].filter((l) => l.startsWith('a=rtpmap')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [name, clockrate, channels] = data.split('/');\n      return {\n        id: Number(id), name, clockrate: Number(clockrate), ...(channels && { channels: Number(channels) }),\n      };\n    });\n\n    const fbParams = sections[sectionName].filter((l) => l.startsWith('a=rtcp-fb')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [type, subtype] = data.split(' ');\n      return { id: Number(id), type, subtype: subtype || '' };\n    });\n\n    const parameters = sections[sectionName].filter((l) => l.startsWith('a=fmtp')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const d = data.split(';').reduce((acc: Record<string, string>, q) => {\n        const [name, value] = q.split('=');\n        acc[name] = value;\n        return acc;\n      }, {});\n      if (Object.values(d).some((z) => !z)) return undefined;\n      return { id: Number(id), data: d };\n    }).filter(Boolean);\n\n    return payloads.map((payload) => {\n      const p = parameters.filter((l) => l!.id === payload.id).map((q) => q!.data).reduce((acc, el) => {\n        return Object.assign(acc, el);\n      }, {});\n      const f = fbParams.filter((l) => l.id === payload.id).map((l) => {\n        return {\n          type: l.type,\n          subtype: l.subtype,\n        };\n      });\n\n      return {\n        ...payload,\n        ...(Object.keys(p).length > 0 && { parameters: p }),\n        ...(f.length > 0 && { feedbackTypes: f }),\n      };\n    });\n  };\n\n  const rawSource = lookup('a=ssrc:', 'audio');\n  const sourceAudio = rawSource && Number(rawSource.split(' ')[0]);\n\n  // TODO multiple source groups\n  const rawSourceVideo = lookup('a=ssrc-group:', 'video')?.split(' ') || undefined;\n  const rawSourceScreencast = lookup('a=ssrc-group:', 'screencast')?.split(' ') || undefined;\n\n  if (!rawSourceVideo) {\n    throw Error('Failed parsing SDP: no video ssrc');\n  }\n\n  const [hash, fingerprint] = lookup('a=fingerprint:')?.split(' ') || [];\n\n  const setup = lookup('a=setup:');\n  if (!hash || !fingerprint) {\n    throw Error('Failed parsing SDP: no fingerprint');\n  }\n\n  console.log(sections);\n\n  const ufrag = lookup('a=ice-ufrag:');\n  const pwd = lookup('a=ice-pwd:');\n\n  if (!ufrag || !pwd) {\n    throw Error('Failed parsing SDP: no ICE ufrag or pwd');\n  }\n\n  return {\n    fingerprints: [\n      {\n        fingerprint,\n        hash,\n        setup: isP2p ? setup! : 'active',\n      },\n    ],\n    pwd,\n    ufrag,\n    ...(sourceAudio && { ssrc: toTelegramSource(sourceAudio) }),\n    ...(rawSourceVideo && {\n      'ssrc-groups': [\n        {\n          semantics: rawSourceVideo[0],\n          sources: rawSourceVideo.slice(1, rawSourceVideo.length).map(Number).map(toTelegramSource),\n        },\n        (isP2p && rawSourceScreencast && {\n          semantics: rawSourceScreencast[0],\n          sources: rawSourceScreencast.slice(1, rawSourceScreencast.length).map(Number).map(toTelegramSource),\n        }),\n      ].filter(Boolean) as SsrcGroup[],\n    }),\n    ...(isP2p && {\n      audioExtmap: parseExtmaps('audio'),\n      videoExtmap: parseExtmaps('video'),\n      screencastExtmap: parseExtmaps('screencast'),\n      audioPayloadTypes: parsePayloadTypes('audio'),\n      videoPayloadTypes: parsePayloadTypes('video'),\n      screencastPayloadTypes: parsePayloadTypes('screencast'),\n    }),\n  };\n};\n","import type {\n  Candidate, GroupCallTransport, PayloadType, RTPExtension, SsrcGroup,\n} from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type Conference = {\n  sessionId: number;\n  audioExtensions: RTPExtension[];\n  videoExtensions: RTPExtension[];\n  audioPayloadTypes: PayloadType[];\n  videoPayloadTypes: PayloadType[];\n  ssrcs: Ssrc[];\n  transport: GroupCallTransport;\n};\n\nexport type Ssrc = {\n  userId: string;\n  endpoint: string;\n  mid: string;\n  isMain: boolean;\n  isRemoved?: boolean;\n  isVideo: boolean;\n  isPresentation?: boolean;\n  sourceGroups: SsrcGroup[];\n};\n\nexport default (conference: Conference, isAnswer = false, isPresentation = false, isP2p = false) => {\n  const lines: string[] = [];\n\n  const add = (value: string) => {\n    lines.push(value);\n  };\n\n  const {\n    sessionId,\n    ssrcs,\n    audioExtensions,\n    videoExtensions,\n    audioPayloadTypes,\n    videoPayloadTypes,\n    transport: {\n      ufrag,\n      pwd,\n      fingerprints,\n      candidates,\n    },\n  } = conference;\n\n  // Header\n  add('v=0'); // version\n  add(`o=- ${sessionId} 2 IN IP4 0.0.0.0`); // sessionId, 2=sessionVersion\n  add('s=-'); // name of the session\n  add('t=0 0'); // time when session is valid\n  add('a=ice-options:trickle');\n  add('a=msid-semantic:WMS *');\n  add(`a=group:BUNDLE ${ssrcs.map((ssrc) => ssrc.mid).join(' ')}${isPresentation ? '' : ` ${isP2p ? '3' : '2'}`}`);\n  // ice-lite: is a minimal version of the ICE specification, intended only for servers running on a public IP address\n  if (!isP2p) add('a=ice-lite');\n\n  const addCandidate = (c: Candidate) => {\n    if (c.sdpString) {\n      add(`a=${c.sdpString}`);\n    } else {\n      let str = '';\n      str += 'a=candidate:';\n      str += `${c.foundation} ${c.component} ${c.protocol} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`;\n      if ('rel-addr' in c) {\n        str += ` raddr ${c['rel-addr']} rport ${c['rel-port']}`;\n      }\n      str += ` generation ${c.generation}`;\n      add(str);\n    }\n  };\n\n  const addTransport = () => {\n    add(`a=ice-ufrag:${ufrag}`);\n    add(`a=ice-pwd:${pwd}`);\n    fingerprints.forEach((fingerprint) => {\n      add(`a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`);\n      add(`a=setup:${isP2p ? (fingerprint.setup) : 'passive'}`);\n    });\n\n    candidates.forEach(addCandidate);\n  };\n\n  const addPayloadType = (payloadType: PayloadType) => {\n    const {\n      channels, id, name, clockrate, parameters,\n    } = payloadType;\n\n    const channelsString = channels ? `/${channels}` : '';\n    add(`a=rtpmap:${id} ${name}/${clockrate}${channelsString}`);\n\n    if (parameters) {\n      const parametersString = Object.keys(parameters).map((key) => {\n        return `${key}=${parameters![key]};`;\n      }).join(' ');\n\n      add(`a=fmtp:${id} ${parametersString}`);\n    }\n\n    payloadType['rtcp-fbs']?.forEach((fbParam) => {\n      add(`a=rtcp-fb:${id} ${fbParam.type}${fbParam.subtype ? ` ${fbParam.subtype}` : ''}`);\n    });\n  };\n\n  const addSsrcEntry = (entry: Ssrc) => {\n    const payloadTypes = entry.isVideo ? videoPayloadTypes : audioPayloadTypes;\n\n    const type = entry.isVideo ? 'video' : 'audio';\n    add(`m=${type} ${entry.isMain ? 1 : 0} RTP/SAVPF ${payloadTypes.map((l) => l.id).join(' ')}`);\n    add('c=IN IP4 0.0.0.0');\n    add('b=AS:1300'); // 1300000 / 1000\n    add(`a=mid:${entry.mid}`);\n    add('a=rtcp-mux');\n    payloadTypes.forEach(addPayloadType);\n\n    add('a=rtcp:1 IN IP4 0.0.0.0');\n    if (entry.isVideo) {\n      add('a=rtcp-rsize');\n    }\n\n    (entry.isVideo ? videoExtensions : audioExtensions).forEach(({ id, uri }) => {\n      add(`a=extmap:${id} ${uri}`);\n    });\n\n    if (entry.isRemoved) {\n      add('a=inactive');\n      return;\n    }\n\n    addTransport();\n\n    if (isP2p) {\n      add('a=sendrecv');\n      add('a=bundle-only');\n    } else {\n      if (isAnswer) {\n        add('a=recvonly');\n        return;\n      }\n      if (entry.isMain) {\n        add('a=sendrecv');\n      } else {\n        add('a=sendonly');\n        add('a=bundle-only');\n      }\n    }\n\n    entry.sourceGroups.forEach((sourceGroup) => {\n      if (sourceGroup.semantics) {\n        add(`a=ssrc-group:${sourceGroup.semantics} ${sourceGroup.sources.map(fromTelegramSource).join(' ')}`);\n      }\n      sourceGroup.sources.forEach((ssrcTelegram) => {\n        const ssrc = fromTelegramSource(ssrcTelegram);\n        add(`a=ssrc:${ssrc} cname:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} msid:${entry.endpoint} ${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} mslabel:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} label:${entry.endpoint}`);\n      });\n    });\n  };\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid === '0' || ssrc.mid === '1').map(addSsrcEntry);\n  } else {\n    ssrcs.filter(addSsrcEntry);\n  }\n\n  if (!isPresentation) {\n    add('m=application 1 UDP/DTLS/SCTP webrtc-datachannel');\n    add('c=IN IP4 0.0.0.0');\n    addTransport();\n    add('a=ice-options:trickle');\n    add(`a=mid:${isP2p ? '3' : (isPresentation ? '1' : '2')}`);\n    add('a=sctp-port:5000');\n    add('a=max-message-size:262144');\n  }\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid !== '0' && ssrc.mid !== '1').map(addSsrcEntry);\n  }\n\n  return `${lines.join('\\n')}\\n`;\n};\n","// https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n\nexport const silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nexport const black = ({ width = 640, height = 480 } = {}) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Cannot create canvas ctx');\n\n  ctx.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  return new MediaStream([Object.assign(stream.getVideoTracks()[0], { enabled: false })]);\n};\n","import parseSdp from './parseSdp';\nimport { ColibriClass } from './colibriClass';\nimport type {\n  GroupCallConnectionData, GroupCallConnectionState, GroupCallParticipant, JoinGroupCallPayload,\n} from './types';\nimport buildSdp, { Conference, Ssrc } from './buildSdp';\nimport { black, silence } from './blacksilence';\nimport {\n  getAmplitude,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  THRESHOLD,\n} from './utils';\nimport Deferred from \"../../util/Deferred\";\nimport safePlay from \"../../util/safePlay\";\n\nexport type StreamType = 'audio' | 'video' | 'presentation';\nconst DEFAULT_MID = 3;\ntype GroupCallState = {\n  connection?: RTCPeerConnection;\n  screenshareConnection?: RTCPeerConnection;\n  dataChannel?: RTCDataChannel;\n  screenshareDataChannel?: RTCDataChannel;\n  participants?: GroupCallParticipant[];\n  conference?: Partial<Conference>;\n  screenshareConference?: Partial<Conference>;\n  streams?: Record<string, {\n    audio?: MediaStream;\n    video?: MediaStream;\n    presentation?: MediaStream;\n  }>;\n  participantFunctions?: Record<string, {\n    setVolume?: (volume: number) => void;\n    toggleMute?: (muted: boolean) => void;\n    getCurrentAmplitude?: () => number;\n  }>;\n  onUpdate?: (...args: any[]) => void;\n  myId?: string;\n  black?: MediaStream;\n  silence?: MediaStream;\n  updatingParticipantsQueue?: any[];\n  facingMode?: VideoFacingModeEnum;\n  isSpeakerDisabled?: boolean;\n  analyserInterval?: number;\n  speaking?: Record<string, number>;\n  audioElement?: HTMLAudioElement;\n  destination?: MediaStreamAudioDestinationNode;\n  audioContext?: AudioContext;\n  mediaStream?: MediaStream;\n  lastMid: number;\n  audioStream?: MediaStream;\n  audioSource?: MediaStreamAudioSourceNode;\n  audioAnalyser?: AnalyserNode;\n};\n\nlet state: GroupCallState | undefined;\n\nexport async function getDevices(streamType: StreamType, isInput = true) {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((l) => l.kind === `${streamType}${isInput ? 'input' : 'output'}`);\n}\n\nexport function toggleSpeaker() {\n  if (!state) {\n    return;\n  }\n\n  state.isSpeakerDisabled = !state.isSpeakerDisabled;\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState: 'connected',\n    isSpeakerDisabled: state.isSpeakerDisabled,\n  });\n  if (state.participantFunctions) {\n    Object.values(state.participantFunctions).forEach((l) => {\n      l.toggleMute?.(!!state?.isSpeakerDisabled);\n    });\n  }\n}\n\nfunction leavePresentation(isFromToggle?: boolean) {\n  if (!state) {\n    return;\n  }\n  state.screenshareDataChannel?.close();\n  state.screenshareConnection?.close();\n\n  if (!isFromToggle) {\n    state.onUpdate?.({\n      '@type': 'updateGroupCallLeavePresentation',\n    });\n  }\n}\n\nexport function toggleNoiseSuppression() {\n  if (!state || !state.myId || !state.streams) {\n    return;\n  }\n\n  const audioStream = state.streams[state.myId].audio;\n  if (!audioStream) {\n    return;\n  }\n\n  const track = audioStream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  // @ts-ignore\n  const { echoCancellation, noiseSuppression } = track.getConstraints();\n\n  track.applyConstraints({\n    echoCancellation: !echoCancellation,\n    // @ts-ignore\n    noiseSuppression: !noiseSuppression,\n  });\n}\n\nexport function getUserStreams(userId: string) {\n  return state?.streams?.[userId];\n}\n\nexport function setVolume(userId: string, volume: number) {\n  const participantFunctions = state?.participantFunctions?.[userId];\n  if (!participantFunctions) return;\n  participantFunctions.setVolume?.(volume);\n}\n\nexport function isStreamEnabled(streamType: StreamType, userId?: string) {\n  const id = userId || state?.myId;\n  const stream = id && getUserStreams(id)?.[streamType];\n  if (!stream) return false;\n\n  return stream.getTracks()[0]?.enabled;\n}\n\nfunction updateGroupCallStreams(userId: string) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallStreams',\n    userId,\n    hasAudioStream: isStreamEnabled('audio', userId),\n    hasVideoStream: isStreamEnabled('video', userId),\n    hasPresentationStream: isStreamEnabled('presentation', userId),\n    amplitude: state.speaking?.[userId],\n  });\n}\n\nasync function getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'audio' && state?.audioStream) {\n    return state.audioStream;\n  }\n\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  const media = await navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && {echoCancellation: true}),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && {noiseSuppression: true}),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n\n  if (state && streamType === 'audio') {\n    state.audioStream = media;\n  }\n\n  if (streamType === 'video') {\n    const vid = document.createElement('video');\n    vid.srcObject = media;\n\n    const deferred = new Deferred();\n    vid.oncanplay = () => deferred.resolve();\n    await deferred.promise;\n  }\n\n  return media;\n}\n\nexport async function switchCameraInput() {\n  if (!state?.myId || !state.connection || !state.streams || !state.facingMode) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.video;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams[state.myId].video = newStream;\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStream(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state || !state.myId || !state.connection || !state.streams) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.[streamType];\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = [\n    ...state.connection.getSenders(),\n    ...(state.screenshareConnection?.getSenders() || []),\n  ].find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = 'user';\n      } else if (streamType === 'audio') {\n        const { audioContext } = state;\n        if (!audioContext) return;\n        const source = state.audioSource || audioContext.createMediaStreamSource(newStream);\n\n        const analyser = state.audioAnalyser || audioContext.createAnalyser();\n        analyser.minDecibels = -100;\n        analyser.maxDecibels = -30;\n        analyser.smoothingTimeConstant = 0.05;\n        analyser.fftSize = 1024;\n\n        source.connect(analyser);\n\n        state = {\n          ...state,\n          audioSource: source,\n          audioAnalyser: analyser,\n          participantFunctions: {\n            ...state.participantFunctions,\n            [state.myId]: {\n              ...state.participantFunctions?.[state.myId],\n              getCurrentAmplitude: () => {\n                const array = new Uint8Array(analyser.frequencyBinCount);\n                analyser.getByteFrequencyData(array);\n                return getAmplitude(array, 1.5);\n              },\n            },\n          },\n        };\n      }\n    } else if (!value && track.enabled) {\n      const newStream = streamType === 'audio' ? state.silence : state.black;\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = undefined;\n      }\n\n      if(streamType !== 'audio') {\n        // We only want to stop video streams\n        track.stop();\n      } else {\n        state.audioSource?.disconnect();\n        state.audioAnalyser?.disconnect();\n      }\n    }\n    updateGroupCallStreams(state.myId!);\n    if (streamType === 'presentation' && !value) leavePresentation(true);\n  } catch (e) {\n\n  }\n}\n\nfunction updateConnectionState(connectionState: GroupCallConnectionState) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState,\n  });\n}\n\nexport function leaveGroupCall() {\n  if (!state) {\n    return;\n  }\n\n  if (state.myId && state.streams?.[state.myId]) {\n    Object.values(state.streams[state.myId] || {}).forEach((stream) => {\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  state.audioStream?.getTracks().forEach((track) => {\n    track.stop();\n  });\n  leavePresentation(true);\n  state.dataChannel?.close();\n  state.connection?.close();\n  updateConnectionState('disconnected');\n\n  if (state.analyserInterval) {\n    clearInterval(state.analyserInterval);\n  }\n\n  state = undefined;\n}\n\nfunction analyzeAmplitudes() {\n  if (!state || !state.participantFunctions) return;\n\n  Object.keys(state.participantFunctions).forEach((id) => {\n    const { getCurrentAmplitude } = state!.participantFunctions![Number(id)];\n\n    if (getCurrentAmplitude) {\n      const amplitude = getCurrentAmplitude();\n      const prevAmplitude = state!.speaking![id] || 0;\n      state!.speaking![id] = amplitude;\n      if ((amplitude > THRESHOLD && prevAmplitude <= THRESHOLD)\n        || (amplitude <= THRESHOLD && prevAmplitude > THRESHOLD)) {\n        updateGroupCallStreams(id);\n      }\n    }\n  });\n}\n\nfunction createDataChannel(connection: RTCPeerConnection) {\n  const dataChannel = connection.createDataChannel('data', {\n    id: 0,\n  });\n\n  dataChannel.onopen = () => {\n    // console.log('Data channel open!');\n  };\n\n  dataChannel.onmessage = (e) => {\n    // console.log('onmessage');\n    const data = JSON.parse(e.data) as ColibriClass;\n    // console.log(data);\n    switch (data.colibriClass) {\n      case 'DominantSpeakerEndpointChangeEvent':\n        break;\n      case 'SenderVideoConstraints':\n\n        break;\n      case 'EndpointConnectivityStatusChangeEvent':\n\n        break;\n    }\n  };\n\n  dataChannel.onerror = (e) => {\n    console.log('%conerror', 'background: green; font-size: 5em');\n    console.error(e);\n  };\n\n  return dataChannel;\n}\n\nexport async function handleUpdateGroupCallParticipants(updatedParticipants: GroupCallParticipant[]) {\n  if (!state) {\n    return;\n  }\n\n  const {\n    participants, conference, connection, myId,\n  } = state;\n\n  if (!participants || !conference || !connection || !conference.ssrcs || !conference.transport || !myId) {\n    return;\n  }\n\n  // Joined from another client\n  if (updatedParticipants.find((participant) => {\n    return participant.isSelf\n      && participant.source\n      !== state?.conference?.ssrcs?.find((l) => l.isMain && !l.isVideo)?.sourceGroups[0].sources[0];\n  })) {\n    leaveGroupCall();\n    return;\n  }\n\n  const newEndpoints: string[] = [];\n  updatedParticipants.forEach((participant) => {\n    if (participant.isSelf) {\n      if (participant.isMuted && !participant.canSelfUnmute) {\n        // Muted by admin\n        toggleStream('audio', false);\n        toggleStream('video', false);\n        toggleStream('presentation', false);\n      }\n      return;\n    }\n\n    const { isLeft } = participant;\n    const isAudioLeft = participant.isMuted || participant.isMutedByMe;\n    const isVideoLeft = !participant.isVideoJoined || !participant.video || isLeft;\n    const isPresentationLeft = !participant.presentation || isLeft;\n\n    let hasVideo = false;\n    let hasAudio = false;\n    let hasPresentation = false;\n\n    conference.ssrcs!.filter((l) => l.userId === participant.id).forEach((ssrc) => {\n      if (!ssrc.isVideo) {\n        if (ssrc.sourceGroups[0].sources[0] === participant.source) {\n          hasAudio = true;\n        }\n        // console.log('has audio, removed=', isAudioLeft);\n        ssrc.isRemoved = isAudioLeft;\n      }\n\n      if (ssrc.isVideo) {\n        if (!ssrc.isPresentation) {\n          if (!!participant.video && ssrc.endpoint === participant.video.endpoint) {\n            hasVideo = true;\n          }\n          // console.log('has video = ', hasVideo, ' removed=', isVideoLeft);\n          ssrc.isRemoved = isVideoLeft;\n        }\n\n        if (ssrc.isPresentation) {\n          if (!!participant.presentation && ssrc.endpoint === participant.presentation.endpoint) {\n            hasPresentation = true;\n          }\n          // console.log('has presentation, removed=', isPresentationLeft);\n          ssrc.isRemoved = isPresentationLeft;\n        }\n      }\n    });\n\n    if (!isAudioLeft && !hasAudio) {\n      // console.log('add audio');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: `audio${participant.source}`,\n        isVideo: false,\n        sourceGroups: [{\n          sources: [participant.source],\n        }],\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isVideoLeft && !hasVideo && participant.video) {\n      // console.log('add video', participant.video);\n      state!.lastMid = state!.lastMid + 1;\n\n      newEndpoints.push(participant.video.endpoint);\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.video.endpoint,\n        isVideo: true,\n        sourceGroups: participant.video.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isPresentationLeft && !hasPresentation && participant.presentation) {\n      // console.log('add presentation');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        isPresentation: true,\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.presentation.endpoint,\n        isVideo: true,\n        sourceGroups: participant.presentation.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n  });\n\n  if (state.updatingParticipantsQueue) {\n    state.updatingParticipantsQueue.push(conference);\n    return;\n  } else {\n    state.updatingParticipantsQueue = [];\n  }\n\n  const sdp = buildSdp(conference as Conference);\n  await connection.setRemoteDescription({\n    type: 'offer',\n    sdp,\n  });\n\n  try {\n    const answer = await connection.createAnswer();\n    await connection.setLocalDescription(answer);\n\n    updateGroupCallStreams(myId);\n    if (state.updatingParticipantsQueue.length > 0) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const newConference of state.updatingParticipantsQueue) {\n        await connection.setRemoteDescription({\n          type: 'offer',\n          sdp: buildSdp(newConference as Conference),\n        });\n        const answerNew = await connection.createAnswer();\n        await connection.setLocalDescription(answerNew);\n        updateGroupCallStreams(myId);\n\n        // if (newEndpoints.length > 0) {\n        //   sendDataChannelMessage({\n        //     colibriClass: 'ReceiverVideoConstraints',\n        //     defaultConstraints: {\n        //       maxHeight: 0,\n        //     },\n        //     constraints: {\n        //       ...(newEndpoints.reduce((acc: Record<string, any>, el) => {\n        //         acc[el] = {\n        //           minHeight: 0,\n        //           maxHeight: 1080,\n        //         };\n        //         return acc;\n        //       }, {})),\n        //     },\n        //     onStageEndpoints: [],\n        //   });\n        // }\n      }\n    }\n    state.updatingParticipantsQueue = undefined;\n  } catch (e) {\n    console.error(e);\n  }\n}\n//\n// function sendDataChannelMessage(message: ColibriClass) {\n//   if (!state || !state.dataChannel || state.dataChannel.readyState !== 'open') {\n//     return;\n//   }\n//\n//   // console.log('SEND!', message);\n//   state.dataChannel.send(JSON.stringify(message));\n// }\n\nexport async function handleUpdateGroupCallConnection(data: GroupCallConnectionData, isPresentation: boolean) {\n  if (!state) {\n    return;\n  }\n\n  const conference = isPresentation ? state.screenshareConference : state.conference;\n  const connection = isPresentation ? state.screenshareConnection : state.connection;\n\n  if (!conference || !connection || !conference.ssrcs) {\n    return;\n  }\n\n  const sessionId = Date.now();\n  const newConference = {\n    ...conference,\n    transport: data.transport,\n    sessionId,\n    audioExtensions: data.audio?.['rtp-hdrexts'],\n    audioPayloadTypes: data.audio?.['payload-types'],\n    videoExtensions: data.video?.['rtp-hdrexts'],\n    videoPayloadTypes: data.video?.['payload-types'],\n  } as Conference;\n\n  state = {\n    ...state,\n    ...(!isPresentation ? { conference: newConference } : { screenshareConference: newConference }),\n  };\n\n  try {\n    await connection.setRemoteDescription({\n      type: 'answer',\n      sdp: buildSdp(newConference, true, isPresentation),\n    });\n\n    // state.resolveTest();\n    // state.test = true;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction handleTrack(e: RTCTrackEvent) {\n  if (!state || !state.audioElement || !state.audioContext || !state.mediaStream) {\n    return;\n  }\n  const ssrc = state.conference?.ssrcs?.find((l) => l.endpoint === e.track.id);\n  if (!ssrc || !ssrc.userId) {\n    return;\n  }\n\n  const { userId, isPresentation } = ssrc;\n  const participant = state.participants?.find((p) => p.id === userId);\n\n  const streamType = (e.track.kind === 'video' ? (isPresentation ? 'presentation' : 'video') : 'audio') as StreamType;\n\n  e.track.onended = () => {\n    delete state?.streams?.[userId][streamType];\n    updateGroupCallStreams(userId);\n  };\n\n  const stream = e.streams[0];\n\n  if (e.track.kind === 'audio') {\n    const { mediaStream } = state;\n    const audioContext = new (window.AudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = (participant?.volume || 10000) / 10000;\n\n    const muteNode = audioContext.createGain();\n    gainNode.gain.value = 1;\n\n    const analyser = audioContext.createAnalyser();\n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n\n    source.connect(analyser).connect(muteNode).connect(gainNode).connect(audioContext.destination);\n\n    mediaStream!.addTrack(source.mediaStream.getAudioTracks()[0]);\n\n    // https://stackoverflow.com/questions/41784137/webrtc-doesnt-work-with-audiocontext#comment117600018_41784241\n    const test = new Audio();\n    test.srcObject = stream;\n    // test.srcObject = source.mediaStream;\n    test.muted = true;\n    test.remove();\n\n    state = {\n      ...state,\n      participantFunctions: {\n        ...state.participantFunctions,\n        [userId]: {\n          ...state.participantFunctions?.[userId],\n          setVolume: (volume: number) => {\n            gainNode.gain.value = volume > 1 ? volume * 2 : volume;\n          },\n          toggleMute: (muted?: boolean) => {\n            muteNode.gain.value = muted ? 0 : 1;\n          },\n          getCurrentAmplitude: () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            return getAmplitude(array, 1.5);\n          },\n        },\n      },\n    };\n  }\n\n  state = {\n    ...state,\n    streams: {\n      ...state.streams,\n      [userId]: {\n        ...state.streams?.[userId],\n        [streamType]: stream,\n      },\n    },\n  };\n\n  updateGroupCallStreams(userId);\n}\n\nfunction initializeConnection(\n  streams: MediaStream[],\n  resolve: (payload: JoinGroupCallPayload) => void,\n  isPresentation = false,\n) {\n  const connection = new RTCPeerConnection();\n\n  const dataChannel = isPresentation ? undefined : createDataChannel(connection);\n\n  streams.forEach((stream) => stream.getTracks().forEach((track) => {\n    connection.addTrack(track, stream);\n  }));\n\n  if (!isPresentation) {\n    connection.oniceconnectionstatechange = () => {\n      const connectionState = connection.iceConnectionState;\n      console.log('iceconnectionstatechange', connectionState);\n      if (connectionState === 'connected' || connectionState === 'completed') {\n        updateConnectionState('connected');\n      } else if (connectionState === 'checking' || connectionState === 'new') {\n        updateConnectionState('connecting');\n      } else if (connection.iceConnectionState === 'disconnected') {\n        updateConnectionState('reconnecting');\n      }\n    };\n  }\n  connection.onconnectionstatechange = () => {\n    console.log('connectionstatechange', connection.connectionState);\n  }\n  connection.ontrack = handleTrack;\n  connection.onnegotiationneeded = async () => {\n    if (!state) return;\n\n    console.log('onnegotiationneeded');\n\n    const { myId } = state;\n\n    if (!myId) {\n      return;\n    }\n    const offer = await connection.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: !isPresentation,\n    });\n    console.log('offer created');\n\n    await connection.setLocalDescription(offer);\n    console.log('local desc set');\n\n    if (!offer.sdp) {\n      return;\n    }\n\n    const sdp = parseSdp(offer);\n    const audioSsrc: Ssrc | undefined = !isPresentation ? {\n      userId: '',\n      sourceGroups: [\n        {\n          sources: [sdp.ssrc || 0],\n        },\n      ],\n      isRemoved: isPresentation,\n      isMain: true,\n      isVideo: false,\n      isPresentation,\n      endpoint: isPresentation ? '1' : '0',\n      mid: isPresentation ? '1' : '0'\n    } : undefined;\n\n    const videoSsrc: Ssrc | undefined = sdp['ssrc-groups'] && {\n      isPresentation,\n      userId: '',\n      sourceGroups: sdp['ssrc-groups'],\n      isMain: true,\n      isVideo: true,\n      endpoint: isPresentation ? '0' : '1',\n      mid: isPresentation ? '0' : '1'\n    };\n\n    const conference = isPresentation ? state.screenshareConference : state.conference;\n\n    const ssrcs: Ssrc[] = [];\n    if (isPresentation) {\n      if (videoSsrc) ssrcs.push(videoSsrc);\n      if (audioSsrc) ssrcs.push(audioSsrc);\n    } else {\n      if (audioSsrc) ssrcs.push(audioSsrc);\n      if (videoSsrc) ssrcs.push(videoSsrc);\n    }\n\n    const audioStream = streams.find((l) => l.getTracks()[0].kind === 'audio');\n    const videoStream = streams.find((l) => l.getTracks()[0].kind === 'video');\n\n    state = {\n      ...state,\n      ...(!isPresentation ? {\n        conference: {\n          ...conference,\n          ssrcs,\n        },\n      } : {\n        screenshareConference: {\n          ...conference,\n          ssrcs,\n        },\n      }),\n      streams: {\n        ...state.streams,\n        [myId]: {\n          ...state.streams?.[myId],\n          ...(audioStream && { audio: audioStream }),\n          ...(!isPresentation && videoStream ? { video: videoStream } : { presentation: videoStream }),\n        },\n      },\n    };\n\n    updateGroupCallStreams(myId);\n\n    resolve(sdp);\n  };\n\n  return { connection, dataChannel };\n}\n\nexport async function startSharingScreen(): Promise<JoinGroupCallPayload | undefined> {\n  if (!state) {\n    return undefined;\n  }\n\n  try {\n    const stream: MediaStream | undefined = await getUserStream('presentation');\n\n    if (!stream) {\n      return undefined;\n    }\n\n    stream.getTracks()[0].onended = () => {\n      if (state && state.myId) {\n        delete state.streams?.[state.myId].presentation;\n        updateGroupCallStreams(state.myId);\n        leavePresentation();\n      }\n    };\n\n    return await new Promise((resolve) => {\n      const { connection, dataChannel } = initializeConnection([stream], resolve, true);\n      state = {\n        ...state!,\n        screenshareConnection: connection,\n        screenshareDataChannel: dataChannel,\n      };\n    });\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function joinGroupCall(\n  myId: string,\n  audioContext: AudioContext,\n  audioElement: HTMLAudioElement,\n  onUpdate: (...args: any[]) => void,\n): Promise<JoinGroupCallPayload> {\n  if (state) {\n    throw Error('Already in call');\n  }\n\n  updateConnectionState('connecting');\n\n  const mediaStream = new MediaStream();\n  audioElement.srcObject = mediaStream;\n  safePlay(audioElement);\n\n  state = {\n    onUpdate,\n    participants: [],\n    myId,\n    speaking: {},\n    silence: silence(audioContext),\n    black: black({ width: 640, height: 480 }),\n    // @ts-ignore\n    analyserInterval: setInterval(analyzeAmplitudes, 1000),\n    audioElement,\n    // destination,\n    audioContext,\n    mediaStream,\n    lastMid: DEFAULT_MID,\n  };\n\n  // Prepare microphone\n  getUserStream('audio');\n\n  return new Promise((resolve) => {\n    state = {\n      ...state!,\n      ...initializeConnection([state!.silence!, state!.black!], resolve),\n    };\n  });\n}\n","import { black, silence } from './blacksilence';\nimport type { ApiPhoneCallConnection, P2pParsedSdp } from './types';\nimport parseSdp from './parseSdp';\nimport type { MediaContent, MediaStateMessage, P2pMessage } from './p2pMessage';\nimport {\n  fromTelegramSource,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED, \n  p2pPayloadTypeToConference,\n} from './utils';\nimport buildSdp, { Conference } from './buildSdp';\nimport { StreamType } from './secretsauce';\n\ntype P2pState = {\n  connection: RTCPeerConnection;\n  dataChannel: RTCDataChannel;\n  emitSignalingData: (data: P2pMessage) => void;\n  onUpdate: (...args: any[]) => void;\n  conference?: Partial<Conference>;\n  isOutgoing: boolean;\n  pendingCandidates: string[];\n  streams: {\n    video?: MediaStream;\n    audio?: MediaStream;\n    presentation?: MediaStream;\n    ownAudio?: MediaStream;\n    ownVideo?: MediaStream;\n    ownPresentation?: MediaStream;\n  };\n  silence: MediaStream;\n  blackVideo: MediaStream;\n  blackPresentation: MediaStream;\n  mediaState: Omit<MediaStateMessage, '@type'>;\n  audio: HTMLAudioElement;\n  gotInitialSetup?: boolean;\n  facingMode?: VideoFacingModeEnum;\n};\n\nlet state: P2pState | undefined;\n\nconst ICE_CANDIDATE_POOL_SIZE = 10;\n\nexport function getStreams() {\n  return state?.streams;\n}\n\nfunction updateStreams() {\n  state?.onUpdate({\n    ...state.mediaState,\n    '@type': 'updatePhoneCallMediaState',\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n}\n\nexport async function switchCameraInputP2p() {\n  if (!state || !state.facingMode) {\n    return;\n  }\n\n  const stream = state.streams.ownVideo;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams.ownVideo = newStream;\n    updateStreams();\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStreamP2p(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state) return;\n  const stream = streamType === 'audio' ? state.streams.ownAudio\n    : (streamType === 'video' ? state.streams.ownVideo : state.streams.ownPresentation);\n\n  if (!stream) return;\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      newStream.getTracks()[0].onended = () => {\n        toggleStreamP2p(streamType, false);\n      };\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n        state.facingMode = 'user';\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      if (streamType === 'video' || streamType === 'presentation') {\n        toggleStreamP2p(streamType === 'video' ? 'presentation' : 'video', false);\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = 'user';\n      // }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence\n        : (streamType === 'video' ? state.blackVideo : state.blackPresentation);\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = undefined;\n      // }\n    }\n    updateStreams();\n    sendMediaState();\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport async function joinPhoneCall(\n  connections: ApiPhoneCallConnection[],\n  emitSignalingData: (data: P2pMessage) => void,\n  isOutgoing: boolean,\n  shouldStartVideo: boolean,\n  isP2p: boolean,\n  onUpdate: (...args: any[]) => void,\n) {\n  const conn = new RTCPeerConnection({\n    iceServers: connections.map((connection) => (\n      {\n        urls: [\n          connection.isTurn && `turn:${connection.ip}:${connection.port}`,\n          connection.isStun && `stun:${connection.ip}:${connection.port}`,\n        ].filter(Boolean),\n        username: connection.username,\n        credentialType: 'password',\n        credential: connection.password,\n      }\n    )),\n    iceTransportPolicy: isP2p ? 'all' : 'relay',\n    bundlePolicy: 'max-bundle',\n    iceCandidatePoolSize: ICE_CANDIDATE_POOL_SIZE,\n  });\n\n  conn.onicecandidate = (e) => {\n    if (!e.candidate) {\n      return;\n    };\n    emitSignalingData({\n      '@type': 'Candidates',\n      candidates: [{\n        sdpString: e.candidate.candidate,\n      }],\n    });\n  };\n\n  conn.onconnectionstatechange = () => {\n    onUpdate({\n      '@type': 'updatePhoneCallConnectionState',\n      connectionState: conn.connectionState,\n    });\n  };\n\n  conn.ontrack = (e) => {\n    if (!state) return;\n\n    const stream = e.streams[0];\n    if (e.track.kind === 'audio') {\n      state.audio.srcObject = stream;\n      state.audio.play().catch();\n      state.streams.audio = stream;\n    } else if (e.transceiver.mid === '1') {\n      state.streams.video = stream;\n    } else {\n      state.streams.presentation = stream;\n    }\n\n    updateStreams();\n  };\n\n  conn.oniceconnectionstatechange = async (e) => {\n    switch(conn.iceConnectionState) {\n      case 'disconnected':\n      case 'failed':\n        if (isOutgoing) {\n          await createOffer(conn, {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true,\n            iceRestart: true,\n          });\n        }\n      default:\n        break;\n    }\n  }\n\n  const slnc = silence(new AudioContext());\n  const video = black({ width: 640, height: 480 });\n  const screenshare = black({ width: 640, height: 480 });\n  conn.addTrack(slnc.getTracks()[0], slnc);\n  conn.addTrack(video.getTracks()[0], video);\n  conn.addTrack(screenshare.getTracks()[0], screenshare);\n\n  const dc = conn.createDataChannel('data', {\n    id: 0,\n    negotiated: true,\n  });\n\n  dc.onmessage = (e) => {\n    processSignalingMessage(JSON.parse(e.data));\n  };\n\n  const audio = new Audio();\n\n  state = {\n    audio,\n    connection: conn,\n    emitSignalingData,\n    isOutgoing,\n    pendingCandidates: [],\n    onUpdate,\n    streams: {\n      ownVideo: video,\n      ownAudio: slnc,\n      ownPresentation: screenshare,\n    },\n    mediaState: {\n      isBatteryLow: false,\n      screencastState: 'inactive',\n      videoState: 'inactive',\n      videoRotation: 0,\n      isMuted: true,\n    },\n    blackVideo: video,\n    blackPresentation: screenshare,\n    silence: slnc,\n    dataChannel: dc,\n  };\n\n  try {\n    toggleStreamP2p('audio', true);\n  } catch (err) {\n    console.error(err)\n  }\n\n  if (isOutgoing) {\n    await createOffer(conn, {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    })\n  }\n}\n\nexport function stopPhoneCall() {\n  if (!state) return;\n\n  state.streams.ownVideo?.getTracks().forEach((track) => track.stop());\n  state.streams.ownPresentation?.getTracks().forEach((track) => track.stop());\n  state.streams.ownAudio?.getTracks().forEach((track) => track.stop());\n  state.dataChannel.close();\n  state.connection.close();\n  state = undefined;\n}\n\nfunction sendMediaState() {\n  if (!state) return;\n  const { emitSignalingData, streams } = state;\n\n  emitSignalingData({\n    '@type': 'MediaState',\n    videoRotation: 0,\n    isMuted: !streams.ownAudio?.getTracks()[0].enabled,\n    isBatteryLow: true,\n    videoState: streams.ownVideo?.getTracks()[0].enabled ? 'active' : 'inactive',\n    screencastState: streams.ownPresentation?.getTracks()[0].enabled ? 'active' : 'inactive',\n  });\n}\n\nfunction filterVP8(mediaContent: MediaContent) {\n  if (!state || state.isOutgoing) return mediaContent;\n\n  const { payloadTypes } = mediaContent!;\n  const idx = payloadTypes.findIndex((payloadType) => payloadType.name === 'VP8');\n  const vp8PayloadType = payloadTypes[idx];\n  const rtxIdx = payloadTypes.findIndex((payloadType) => Number(payloadType.parameters?.apt) === vp8PayloadType.id);\n  mediaContent.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n\n  return mediaContent;\n}\n\nfunction sendInitialSetup(sdp: P2pParsedSdp) {\n  if (!state) return;\n  const { emitSignalingData } = state;\n\n  if (!sdp.ssrc || !sdp['ssrc-groups'] || !sdp['ssrc-groups'][0] || !sdp['ssrc-groups'][1]) return;\n\n  emitSignalingData({\n    '@type': 'InitialSetup',\n    fingerprints: sdp.fingerprints,\n    ufrag: sdp.ufrag,\n    pwd: sdp.pwd,\n    audio: {\n      ssrc: fromTelegramSource(sdp.ssrc).toString(),\n      ssrcGroups: [],\n      payloadTypes: sdp.audioPayloadTypes,\n      rtpExtensions: sdp.audioExtmap,\n    },\n    video: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][0].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][0].semantics,\n        ssrcs: sdp['ssrc-groups'][0].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.videoPayloadTypes,\n      rtpExtensions: sdp.videoExtmap,\n    }),\n    screencast: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][1].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][1].semantics,\n        ssrcs: sdp['ssrc-groups'][1].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.screencastPayloadTypes,\n      rtpExtensions: sdp.screencastExtmap,\n    }),\n  });\n}\n\nexport async function processSignalingMessage(message: P2pMessage) {\n  if (!state || !state.connection) return;\n\n  switch (message['@type']) {\n    case 'MediaState': {\n      state.mediaState = message;\n      updateStreams();\n      sendMediaState();\n      break;\n    }\n    case 'Candidates': {\n      const { pendingCandidates, gotInitialSetup } = state;\n      message.candidates.forEach((candidate) => {\n        pendingCandidates.push(candidate.sdpString);\n      });\n      if (gotInitialSetup) {\n        await commitPendingIceCandidates();\n      }\n      break;\n    }\n    case 'InitialSetup': {\n      const {\n        connection, isOutgoing,\n      } = state;\n      if (!connection) return;\n\n      const newConference = {\n        transport: {\n          candidates: [],\n          ufrag: message.ufrag,\n          pwd: message.pwd,\n          fingerprints: message.fingerprints,\n          'rtcp-mux': false,\n          xmlns: '',\n        },\n        sessionId: Date.now(),\n        ssrcs: [\n          message.audio && {\n            isVideo: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '0',\n            mid: '0',\n            sourceGroups: [{\n              sources: [message.audio.ssrc],\n            }],\n          },\n          message.video && {\n            isVideo: true,\n            isPresentation: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '1',\n            mid: '1',\n            sourceGroups: message.video.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n          message.screencast && {\n            isVideo: true,\n            isPresentation: true,\n            isMain: false,\n            userId: '123',\n            endpoint: '2',\n            mid: '2',\n            sourceGroups: message.screencast.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n        ],\n        audioPayloadTypes: message.audio!.payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        audioExtensions: message.audio!.rtpExtensions,\n        videoPayloadTypes: filterVP8(message.video!).payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        videoExtensions: message.video!.rtpExtensions,\n      } as Conference;\n\n      await connection.setRemoteDescription({\n        sdp: buildSdp(newConference, isOutgoing, undefined, true),\n        type: isOutgoing ? 'answer' : 'offer',\n      });\n\n      state.conference = newConference;\n\n      if (!isOutgoing) {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        sendInitialSetup(parseSdp(connection.localDescription!, true) as P2pParsedSdp);\n      }\n      state.gotInitialSetup = true;\n      await commitPendingIceCandidates();\n      break;\n    }\n  }\n}\n\nasync function commitPendingIceCandidates() {\n  if (!state) {\n    return;\n  }\n  const { pendingCandidates, connection } = state;\n  if (!pendingCandidates.length) {\n    return;\n  }\n  await Promise.all(pendingCandidates.map((c) => tryAddCandidate(connection, c)));\n  state.pendingCandidates = [];\n}\n\nasync function tryAddCandidate(connection: RTCPeerConnection, candidate: string) {\n  try {\n    await connection.addIceCandidate({\n      candidate,\n      sdpMLineIndex: 0,\n    })\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function createOffer(conn: RTCPeerConnection, params: RTCOfferOptions) {\n  const offer = await conn.createOffer(params);\n  await conn.setLocalDescription(offer);\n  sendInitialSetup(parseSdp(conn.localDescription!, true) as P2pParsedSdp);\n}\n","import type { ActionReturnType } from '../../types';\n\nimport { GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport {\n  isStreamEnabled,\n  joinGroupCall,\n  leaveGroupCall,\n  setVolume, startSharingScreen,\n  stopPhoneCall,\n  toggleStream,\n} from '../../../lib/secret-sauce';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { addUsers } from '../../reducers';\nimport {\n  removeGroupCall,\n  updateActiveGroupCall,\n} from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChat, selectTabState, selectUser } from '../../selectors';\nimport {\n  selectActiveGroupCall, selectPhoneCallUser,\n} from '../../selectors/calls';\nimport { getGroupCallAudioContext, getGroupCallAudioElement, removeGroupCallAudioElement } from '../ui/calls';\nimport { loadFullChat } from './chats';\n\nconst HANG_UP_UI_DELAY = 500;\n\naddActionHandler('leaveGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    isFromLibrary, shouldDiscard, shouldRemove, rejoin,\n    isPageUnload, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  global = updateActiveGroupCall(global, { connectionState: 'disconnected' }, groupCall.participantsCount - 1);\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: undefined,\n    },\n  };\n  setGlobal(global);\n\n  await callApi('leaveGroupCall', {\n    call: groupCall, isPageUnload,\n  });\n  await callApi('abortRequestGroup', 'call');\n\n  if (shouldDiscard) {\n    await callApi('discardGroupCall', {\n      call: groupCall,\n    });\n  }\n\n  global = getGlobal();\n  if (shouldRemove) {\n    global = removeGroupCall(global, groupCall.id);\n  }\n\n  removeGroupCallAudioElement();\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n  if (!isFromLibrary) {\n    leaveGroupCall();\n  }\n\n  actions.afterHangUp();\n\n  if (rejoin) {\n    actions.requestMasterAndJoinGroupCall({\n      ...rejoin,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('toggleGroupCallVideo', async (global): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  await toggleStream('video');\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    videoStopped: !isStreamEnabled('video'),\n    participant: user,\n  });\n});\n\naddActionHandler('requestToSpeak', (global, actions, payload): ActionReturnType => {\n  const { value } = payload || { value: true };\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    raiseHand: value,\n    participant: user,\n  });\n});\n\naddActionHandler('setGroupCallParticipantVolume', (global, actions, payload): ActionReturnType => {\n  const { participantId, volume } = payload!;\n\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  setVolume(participantId, Math.floor(volume / GROUP_CALL_VOLUME_MULTIPLIER) / 100);\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    volume: Number(volume),\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallMute', async (global, actions, payload): Promise<void> => {\n  const { participantId, value } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId || global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const muted = value === undefined ? isStreamEnabled('audio', user.id) : value;\n\n  if (!participantId) {\n    await toggleStream('audio');\n  } else {\n    setVolume(participantId, muted ? 0 : 1);\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    muted,\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallPresentation', async (global, actions, payload): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const value = payload?.value !== undefined ? payload?.value : !isStreamEnabled('presentation');\n  if (value) {\n    const params = await startSharingScreen();\n    if (!params) {\n      return;\n    }\n\n    await callApi('joinGroupCallPresentation', {\n      call: groupCall,\n      params,\n    });\n  } else {\n    await toggleStream('presentation', false);\n    await callApi('leaveGroupCallPresentation', {\n      call: groupCall,\n    });\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    presentationPaused: !isStreamEnabled('presentation'),\n    participant: user,\n  });\n});\n\naddActionHandler('connectToActiveGroupCall', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) return;\n\n  if (groupCall.connectionState === 'discarded') {\n    actions.showNotification({ message: 'This voice chat is not active', tabId });\n    return;\n  }\n\n  const audioElement = getGroupCallAudioElement();\n  const audioContext = getGroupCallAudioContext();\n\n  if (!audioElement || !audioContext) {\n    return;\n  }\n\n  const {\n    currentUserId,\n  } = global;\n\n  if (!currentUserId) return;\n\n  const params = await joinGroupCall(currentUserId, audioContext, audioElement, actions.apiUpdate);\n\n  const result = await callApi('joinGroupCall', {\n    call: groupCall,\n    params,\n    inviteHash: groupCall.inviteHash,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    actions.showNotification({\n      // TODO[lang] Localize error message\n      message: 'Failed to join voice chat',\n      tabId,\n    });\n    actions.leaveGroupCall({ tabId });\n    return;\n  }\n\n  actions.loadMoreGroupCallParticipants();\n\n  if (groupCall.chatId) {\n    global = getGlobal();\n    const chat = selectChat(global, groupCall.chatId);\n    if (!chat) return;\n    await loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('connectToActivePhoneCall', async (global, actions): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const user = selectPhoneCallUser(global);\n\n  if (!user) return;\n\n  const dhConfig = await callApi('getDhConfig');\n\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [true]);\n\n  const gAHash = await callApi('requestPhoneCall', [dhConfig])!;\n\n  const result = await callApi('requestCall', { user, gAHash, isVideo: phoneCall.isVideo });\n\n  if (!result) {\n    if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n    return;\n  }\n  global = getGlobal();\n  global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  setGlobal(global);\n});\n\naddActionHandler('acceptCall', async (global): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const dhConfig = await callApi('getDhConfig');\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [false]);\n\n  const gB = await callApi('acceptPhoneCall', [dhConfig])!;\n  const result = await callApi('acceptCall', { call: phoneCall, gB });\n  if (!result) {\n    return;\n  }\n  global = getGlobal();\n  global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  setGlobal(global);\n});\n\naddActionHandler('sendSignalingData', (global, actions, payload): ActionReturnType => {\n  const { phoneCall } = global;\n  if (!phoneCall) {\n    return;\n  }\n\n  const data = JSON.stringify(payload);\n\n  (async () => {\n    const encodedData = await callApi('encodePhoneCallData', [data]);\n\n    if (!encodedData) return;\n\n    callApi('sendSignalingData', { data: encodedData, call: phoneCall });\n  })();\n});\n\naddActionHandler('closeCallRatingModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('setCallRating', (global, actions, payload): ActionReturnType => {\n  const { rating, comment, tabId = getCurrentTabId() } = payload;\n\n  const { ratingPhoneCall } = selectTabState(global, tabId);\n  if (!ratingPhoneCall) {\n    return undefined;\n  }\n\n  callApi('setCallRating', { call: ratingPhoneCall, rating, comment });\n\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('hangUp', (global, actions, payload): ActionReturnType => {\n  const { isPageUnload, tabId = getCurrentTabId() } = payload || {};\n  const { phoneCall } = global;\n\n  if (!phoneCall) return undefined;\n\n  if (phoneCall.state === 'discarded') {\n    callApi('destroyPhoneCallState');\n    stopPhoneCall();\n\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  callApi('destroyPhoneCallState');\n  stopPhoneCall();\n  callApi('discardCall', { call: phoneCall, isPageUnload });\n\n  if (phoneCall.state === 'requesting') {\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  setTimeout(() => {\n    global = getGlobal();\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n    actions.afterHangUp();\n  }, HANG_UP_UI_DELAY);\n\n  return undefined;\n});\n","export const EMOJI_DATA = new Uint16Array([\n  0xd83d, 0xde09, 0xd83d, 0xde0d, 0xd83d, 0xde1b, 0xd83d, 0xde2d, 0xd83d, 0xde31, 0xd83d, 0xde21,\n  0xd83d, 0xde0e, 0xd83d, 0xde34, 0xd83d, 0xde35, 0xd83d, 0xde08, 0xd83d, 0xde2c, 0xd83d, 0xde07,\n  0xd83d, 0xde0f, 0xd83d, 0xdc6e, 0xd83d, 0xdc77, 0xd83d, 0xdc82, 0xd83d, 0xdc76, 0xd83d, 0xdc68,\n  0xd83d, 0xdc69, 0xd83d, 0xdc74, 0xd83d, 0xdc75, 0xd83d, 0xde3b, 0xd83d, 0xde3d, 0xd83d, 0xde40,\n  0xd83d, 0xdc7a, 0xd83d, 0xde48, 0xd83d, 0xde49, 0xd83d, 0xde4a, 0xd83d, 0xdc80, 0xd83d, 0xdc7d,\n  0xd83d, 0xdca9, 0xd83d, 0xdd25, 0xd83d, 0xdca5, 0xd83d, 0xdca4, 0xd83d, 0xdc42, 0xd83d, 0xdc40,\n  0xd83d, 0xdc43, 0xd83d, 0xdc45, 0xd83d, 0xdc44, 0xd83d, 0xdc4d, 0xd83d, 0xdc4e, 0xd83d, 0xdc4c,\n  0xd83d, 0xdc4a, 0x270c, 0x270b, 0xd83d, 0xdc50, 0xd83d, 0xdc46, 0xd83d, 0xdc47, 0xd83d, 0xdc49,\n  0xd83d, 0xdc48, 0xd83d, 0xde4f, 0xd83d, 0xdc4f, 0xd83d, 0xdcaa, 0xd83d, 0xdeb6, 0xd83c, 0xdfc3,\n  0xd83d, 0xdc83, 0xd83d, 0xdc6b, 0xd83d, 0xdc6a, 0xd83d, 0xdc6c, 0xd83d, 0xdc6d, 0xd83d, 0xdc85,\n  0xd83c, 0xdfa9, 0xd83d, 0xdc51, 0xd83d, 0xdc52, 0xd83d, 0xdc5f, 0xd83d, 0xdc5e, 0xd83d, 0xdc60,\n  0xd83d, 0xdc55, 0xd83d, 0xdc57, 0xd83d, 0xdc56, 0xd83d, 0xdc59, 0xd83d, 0xdc5c, 0xd83d, 0xdc53,\n  0xd83c, 0xdf80, 0xd83d, 0xdc84, 0xd83d, 0xdc9b, 0xd83d, 0xdc99, 0xd83d, 0xdc9c, 0xd83d, 0xdc9a,\n  0xd83d, 0xdc8d, 0xd83d, 0xdc8e, 0xd83d, 0xdc36, 0xd83d, 0xdc3a, 0xd83d, 0xdc31, 0xd83d, 0xdc2d,\n  0xd83d, 0xdc39, 0xd83d, 0xdc30, 0xd83d, 0xdc38, 0xd83d, 0xdc2f, 0xd83d, 0xdc28, 0xd83d, 0xdc3b,\n  0xd83d, 0xdc37, 0xd83d, 0xdc2e, 0xd83d, 0xdc17, 0xd83d, 0xdc34, 0xd83d, 0xdc11, 0xd83d, 0xdc18,\n  0xd83d, 0xdc3c, 0xd83d, 0xdc27, 0xd83d, 0xdc25, 0xd83d, 0xdc14, 0xd83d, 0xdc0d, 0xd83d, 0xdc22,\n  0xd83d, 0xdc1b, 0xd83d, 0xdc1d, 0xd83d, 0xdc1c, 0xd83d, 0xdc1e, 0xd83d, 0xdc0c, 0xd83d, 0xdc19,\n  0xd83d, 0xdc1a, 0xd83d, 0xdc1f, 0xd83d, 0xdc2c, 0xd83d, 0xdc0b, 0xd83d, 0xdc10, 0xd83d, 0xdc0a,\n  0xd83d, 0xdc2b, 0xd83c, 0xdf40, 0xd83c, 0xdf39, 0xd83c, 0xdf3b, 0xd83c, 0xdf41, 0xd83c, 0xdf3e,\n  0xd83c, 0xdf44, 0xd83c, 0xdf35, 0xd83c, 0xdf34, 0xd83c, 0xdf33, 0xd83c, 0xdf1e, 0xd83c, 0xdf1a,\n  0xd83c, 0xdf19, 0xd83c, 0xdf0e, 0xd83c, 0xdf0b, 0x26a1, 0x2614, 0x2744, 0x26c4, 0xd83c, 0xdf00,\n  0xd83c, 0xdf08, 0xd83c, 0xdf0a, 0xd83c, 0xdf93, 0xd83c, 0xdf86, 0xd83c, 0xdf83, 0xd83d, 0xdc7b,\n  0xd83c, 0xdf85, 0xd83c, 0xdf84, 0xd83c, 0xdf81, 0xd83c, 0xdf88, 0xd83d, 0xdd2e, 0xd83c, 0xdfa5,\n  0xd83d, 0xdcf7, 0xd83d, 0xdcbf, 0xd83d, 0xdcbb, 0x260e, 0xd83d, 0xdce1, 0xd83d, 0xdcfa, 0xd83d,\n  0xdcfb, 0xd83d, 0xdd09, 0xd83d, 0xdd14, 0x23f3, 0x23f0, 0x231a, 0xd83d, 0xdd12, 0xd83d, 0xdd11,\n  0xd83d, 0xdd0e, 0xd83d, 0xdca1, 0xd83d, 0xdd26, 0xd83d, 0xdd0c, 0xd83d, 0xdd0b, 0xd83d, 0xdebf,\n  0xd83d, 0xdebd, 0xd83d, 0xdd27, 0xd83d, 0xdd28, 0xd83d, 0xdeaa, 0xd83d, 0xdeac, 0xd83d, 0xdca3,\n  0xd83d, 0xdd2b, 0xd83d, 0xdd2a, 0xd83d, 0xdc8a, 0xd83d, 0xdc89, 0xd83d, 0xdcb0, 0xd83d, 0xdcb5,\n  0xd83d, 0xdcb3, 0x2709, 0xd83d, 0xdceb, 0xd83d, 0xdce6, 0xd83d, 0xdcc5, 0xd83d, 0xdcc1, 0x2702,\n  0xd83d, 0xdccc, 0xd83d, 0xdcce, 0x2712, 0x270f, 0xd83d, 0xdcd0, 0xd83d, 0xdcda, 0xd83d, 0xdd2c,\n  0xd83d, 0xdd2d, 0xd83c, 0xdfa8, 0xd83c, 0xdfac, 0xd83c, 0xdfa4, 0xd83c, 0xdfa7, 0xd83c, 0xdfb5,\n  0xd83c, 0xdfb9, 0xd83c, 0xdfbb, 0xd83c, 0xdfba, 0xd83c, 0xdfb8, 0xd83d, 0xdc7e, 0xd83c, 0xdfae,\n  0xd83c, 0xdccf, 0xd83c, 0xdfb2, 0xd83c, 0xdfaf, 0xd83c, 0xdfc8, 0xd83c, 0xdfc0, 0x26bd, 0x26be,\n  0xd83c, 0xdfbe, 0xd83c, 0xdfb1, 0xd83c, 0xdfc9, 0xd83c, 0xdfb3, 0xd83c, 0xdfc1, 0xd83c, 0xdfc7,\n  0xd83c, 0xdfc6, 0xd83c, 0xdfca, 0xd83c, 0xdfc4, 0x2615, 0xd83c, 0xdf7c, 0xd83c, 0xdf7a, 0xd83c,\n  0xdf77, 0xd83c, 0xdf74, 0xd83c, 0xdf55, 0xd83c, 0xdf54, 0xd83c, 0xdf5f, 0xd83c, 0xdf57, 0xd83c,\n  0xdf71, 0xd83c, 0xdf5a, 0xd83c, 0xdf5c, 0xd83c, 0xdf61, 0xd83c, 0xdf73, 0xd83c, 0xdf5e, 0xd83c,\n  0xdf69, 0xd83c, 0xdf66, 0xd83c, 0xdf82, 0xd83c, 0xdf70, 0xd83c, 0xdf6a, 0xd83c, 0xdf6b, 0xd83c,\n  0xdf6d, 0xd83c, 0xdf6f, 0xd83c, 0xdf4e, 0xd83c, 0xdf4f, 0xd83c, 0xdf4a, 0xd83c, 0xdf4b, 0xd83c,\n  0xdf52, 0xd83c, 0xdf47, 0xd83c, 0xdf49, 0xd83c, 0xdf53, 0xd83c, 0xdf51, 0xd83c, 0xdf4c, 0xd83c,\n  0xdf50, 0xd83c, 0xdf4d, 0xd83c, 0xdf46, 0xd83c, 0xdf45, 0xd83c, 0xdf3d, 0xd83c, 0xdfe1, 0xd83c,\n  0xdfe5, 0xd83c, 0xdfe6, 0x26ea, 0xd83c, 0xdff0, 0x26fa, 0xd83c, 0xdfed, 0xd83d, 0xddfb, 0xd83d,\n  0xddfd, 0xd83c, 0xdfa0, 0xd83c, 0xdfa1, 0x26f2, 0xd83c, 0xdfa2, 0xd83d, 0xdea2, 0xd83d, 0xdea4,\n  0x2693, 0xd83d, 0xde80, 0x2708, 0xd83d, 0xde81, 0xd83d, 0xde82, 0xd83d, 0xde8b, 0xd83d, 0xde8e,\n  0xd83d, 0xde8c, 0xd83d, 0xde99, 0xd83d, 0xde97, 0xd83d, 0xde95, 0xd83d, 0xde9b, 0xd83d, 0xdea8,\n  0xd83d, 0xde94, 0xd83d, 0xde92, 0xd83d, 0xde91, 0xd83d, 0xdeb2, 0xd83d, 0xdea0, 0xd83d, 0xde9c,\n  0xd83d, 0xdea6, 0x26a0, 0xd83d, 0xdea7, 0x26fd, 0xd83c, 0xdfb0, 0xd83d, 0xddff, 0xd83c, 0xdfaa,\n  0xd83c, 0xdfad, 0xd83c, 0xddef, 0xd83c, 0xddf5, 0xd83c, 0xddf0, 0xd83c, 0xddf7, 0xd83c, 0xdde9,\n  0xd83c, 0xddea, 0xd83c, 0xdde8, 0xd83c, 0xddf3, 0xd83c, 0xddfa, 0xd83c, 0xddf8, 0xd83c, 0xddeb,\n  0xd83c, 0xddf7, 0xd83c, 0xddea, 0xd83c, 0xddf8, 0xd83c, 0xddee, 0xd83c, 0xddf9, 0xd83c, 0xddf7,\n  0xd83c, 0xddfa, 0xd83c, 0xddec, 0xd83c, 0xdde7, 0x0031, 0x20e3, 0x0032, 0x20e3, 0x0033, 0x20e3,\n  0x0034, 0x20e3, 0x0035, 0x20e3, 0x0036, 0x20e3, 0x0037, 0x20e3, 0x0038, 0x20e3, 0x0039, 0x20e3,\n  0x0030, 0x20e3, 0xd83d, 0xdd1f, 0x2757, 0x2753, 0x2665, 0x2666, 0xd83d, 0xdcaf, 0xd83d, 0xdd17,\n  0xd83d, 0xdd31, 0xd83d, 0xdd34, 0xd83d, 0xdd35, 0xd83d, 0xdd36, 0xd83d, 0xdd37,\n]);\n\nexport const EMOJI_OFFSETS = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,\n  24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46,\n  48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70,\n  72, 74, 76, 78, 80, 82, 84, 86, 87, 88, 90, 92,\n  94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,\n  118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140,\n  142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,\n  166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188,\n  190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\n  214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236,\n  238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259,\n  260, 261, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280,\n  282, 284, 286, 288, 290, 292, 294, 295, 297, 299, 301, 303,\n  305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324,\n  326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348,\n  350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 366, 368,\n  370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392,\n  394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414,\n  416, 418, 420, 422, 424, 426, 427, 429, 431, 433, 435, 437,\n  439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461,\n  463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485,\n  487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 508,\n  510, 511, 513, 515, 517, 519, 521, 522, 524, 526, 528, 529,\n  531, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552,\n  554, 556, 558, 560, 562, 564, 566, 567, 569, 570, 572, 574,\n  576, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618,\n  620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 641,\n  642, 643, 644, 646, 648, 650, 652, 654, 656, 658,\n];\n","import type { ApiPhoneCall } from '../../../api/types';\nimport type { ApiCallProtocol } from '../../../lib/secret-sauce';\nimport type { ActionReturnType } from '../../types';\n\nimport {\n  handleUpdateGroupCallConnection,\n  handleUpdateGroupCallParticipants,\n  joinPhoneCall, processSignalingMessage,\n} from '../../../lib/secret-sauce';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey, omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { EMOJI_DATA, EMOJI_OFFSETS } from '../../../util/phoneCallEmojiConstants';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { addUsers } from '../../reducers';\nimport { updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectActiveGroupCall, selectGroupCallParticipant, selectPhoneCallUser } from '../../selectors/calls';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  const { activeGroupCallId } = global.groupCalls;\n\n  switch (update['@type']) {\n    case 'updateGroupCallLeavePresentation': {\n      actions.toggleGroupCallPresentation({ value: false });\n      break;\n    }\n    case 'updateGroupCallStreams': {\n      if (!update.userId || !activeGroupCallId) break;\n      if (!selectGroupCallParticipant(global, activeGroupCallId, update.userId)) break;\n\n      return updateGroupCallParticipant(global, activeGroupCallId, update.userId, omit(update, ['@type', 'userId']));\n    }\n    case 'updateGroupCallConnectionState': {\n      if (!activeGroupCallId) break;\n\n      if (update.connectionState === 'disconnected') {\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ isFromLibrary: true, tabId: getCurrentTabId() });\n        break;\n      }\n\n      return updateGroupCall(global, activeGroupCallId, {\n        connectionState: update.connectionState,\n        isSpeakerDisabled: update.isSpeakerDisabled,\n      });\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants } = update;\n      if (activeGroupCallId === groupCallId) {\n        void handleUpdateGroupCallParticipants(participants);\n      }\n      break;\n    }\n    case 'updateGroupCallConnection': {\n      if (update.data.stream) {\n        actions.showNotification({ message: 'Big live streams are not yet supported', tabId: getCurrentTabId() });\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ tabId: getCurrentTabId() });\n        break;\n      }\n      void handleUpdateGroupCallConnection(update.data, update.presentation);\n\n      const groupCall = selectActiveGroupCall(global);\n      if (groupCall?.participants && Object.keys(groupCall.participants).length > 0) {\n        void handleUpdateGroupCallParticipants(Object.values(groupCall.participants));\n      }\n      break;\n    }\n    case 'updatePhoneCallMediaState':\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          ...omit(update, ['@type']),\n        } as ApiPhoneCall,\n      };\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n      const { phoneCall, currentUserId } = global;\n\n      const call: ApiPhoneCall = {\n        ...phoneCall,\n        ...update.call,\n      };\n\n      const isOutgoing = phoneCall?.adminId === currentUserId;\n\n      global = {\n        ...global,\n        phoneCall: call,\n      };\n      setGlobal(global);\n      global = getGlobal();\n\n      if (phoneCall && phoneCall.id && call.id !== phoneCall.id) {\n        if (call.state !== 'discarded') {\n          callApi('discardCall', {\n            call,\n            isBusy: true,\n          });\n        }\n        return undefined;\n      }\n\n      const {\n        accessHash, state, connections, gB,\n      } = call;\n\n      if (state === 'active' || state === 'accepted') {\n        if (!verifyPhoneCallProtocol(call.protocol)) {\n          const user = selectPhoneCallUser(global);\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n          actions.showNotification({\n            message: langProvider.oldTranslate('VoipPeerIncompatible', user?.firstName),\n            tabId: getCurrentTabId(),\n          });\n          return undefined;\n        }\n      }\n\n      if (state === 'discarded') {\n        // Discarded from other device\n        if (!phoneCall) return undefined;\n\n        return updateTabState(global, {\n          ...(call.needRating && { ratingPhoneCall: call }),\n          isCallPanelVisible: undefined,\n        }, getCurrentTabId());\n      } else if (state === 'accepted' && accessHash && gB) {\n        (async () => {\n          const { gA, keyFingerprint, emojis } = await callApi('confirmPhoneCall', [gB, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n          global = getGlobal();\n          const newCall = {\n            ...global.phoneCall,\n            emojis,\n          } as ApiPhoneCall;\n\n          global = {\n            ...global,\n            phoneCall: newCall,\n          };\n          setGlobal(global);\n\n          const result = await callApi('confirmCall', {\n            call, gA, keyFingerprint,\n          });\n          if (result) {\n            global = getGlobal();\n            global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n            setGlobal(global);\n          }\n        })();\n      } else if (state === 'active' && connections && phoneCall?.state !== 'active') {\n        if (!isOutgoing) {\n          callApi('receivedCall', { call });\n          (async () => {\n            const { emojis } = await callApi('confirmPhoneCall', [call!.gAOrB!, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n            global = getGlobal();\n            const newCall = {\n              ...global.phoneCall,\n              emojis,\n            } as ApiPhoneCall;\n\n            global = {\n              ...global,\n              phoneCall: newCall,\n            };\n            setGlobal(global);\n          })();\n        }\n        void joinPhoneCall(\n          connections,\n          actions.sendSignalingData,\n          isOutgoing,\n          Boolean(call?.isVideo),\n          Boolean(call.isP2pAllowed),\n          actions.apiUpdate,\n        );\n      }\n\n      return global;\n    }\n    case 'updatePhoneCallConnectionState': {\n      const { connectionState } = update;\n\n      if (!global.phoneCall) return global;\n\n      if (connectionState === 'closed' || connectionState === 'disconnected' || connectionState === 'failed') {\n        if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n        return undefined;\n      }\n\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          isConnected: connectionState === 'connected',\n        },\n      };\n    }\n    case 'updatePhoneCallSignalingData': {\n      const { phoneCall } = global;\n\n      if (!phoneCall) {\n        break;\n      }\n\n      callApi('decodePhoneCallData', [update.data])?.then(processSignalingMessage);\n      break;\n    }\n  }\n\n  return undefined;\n});\n\nfunction verifyPhoneCallProtocol(protocol?: ApiCallProtocol) {\n  return protocol?.libraryVersions.some((version) => {\n    return version === '4.0.0' || version === '4.0.1';\n  });\n}\n","import type { GroupCallParticipant } from '../../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../../config';\n\nexport default function formatGroupCallVolume(participant: GroupCallParticipant) {\n  return Math.floor((participant.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER).toString();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { selectIsAdminInActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunThrottled from '../../../hooks/useRunThrottled';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport DeleteMemberModal from '../../right/DeleteMemberModal';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './GroupCallParticipantMenu.scss';\n\nconst SPEAKER_ICON_DISABLED_SEGMENT: [number, number] = [0, 17];\nconst SPEAKER_ICON_ENABLED_SEGMENT: [number, number] = [17, 34];\n\ntype OwnProps =\n  {\n    participant?: GroupCallParticipant;\n    onCloseAnimationEnd: VoidFunction;\n    onClose: VoidFunction;\n    isDropdownOpen: boolean;\n    menuRef?: React.RefObject<HTMLDivElement>;\n  }\n  & MenuPositionOptions;\n\ntype StateProps = {\n  isAdmin: boolean;\n};\n\nconst VOLUME_ZERO = 0;\nconst VOLUME_LOW = 50;\nconst VOLUME_MEDIUM = 100;\nconst VOLUME_NORMAL = 150;\n\nconst VOLUME_CHANGE_THROTTLE = 500;\n\nconst SPEAKER_ICON_SIZE = 24;\n\nconst GroupCallParticipantMenu: FC<OwnProps & StateProps> = ({\n  participant,\n  onCloseAnimationEnd,\n  onClose,\n  isDropdownOpen,\n  isAdmin,\n  menuRef,\n  ...menuPositionOptions\n}) => {\n  const {\n    toggleGroupCallMute,\n    setGroupCallParticipantVolume,\n    toggleGroupCallPanel,\n    openChat,\n    requestToSpeak,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isDeleteUserModalOpen, openDeleteUserModal, closeDeleteUserModal] = useFlag();\n\n  const id = participant?.id;\n  const {\n    isMutedByMe, isMuted, isSelf, canSelfUnmute,\n  } = participant || {};\n  const isRaiseHand = Boolean(participant?.raiseHandRating);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n\n  const [localVolume, setLocalVolume] = useState(\n    isMutedByMe ? VOLUME_ZERO : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER),\n  );\n\n  const [shouldPlay, setShouldPlay] = useState(false);\n\n  const isLocalVolumeZero = localVolume === VOLUME_ZERO;\n  const speakerIconPlaySegment = isLocalVolumeZero ? SPEAKER_ICON_DISABLED_SEGMENT : SPEAKER_ICON_ENABLED_SEGMENT;\n\n  useEffect(() => {\n    if (isDropdownOpen) return;\n    setShouldPlay(false);\n  }, [isDropdownOpen]);\n\n  const handleSetLocalVolume = useLastCallback((volume: number) => {\n    setLocalVolume(volume);\n    const isNewLocalVolumeZero = volume === VOLUME_ZERO;\n    setShouldPlay(isNewLocalVolumeZero !== isLocalVolumeZero);\n  });\n\n  useEffect(() => {\n    setLocalVolume(isMutedByMe\n      ? VOLUME_ZERO\n      : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER));\n    // We only want to initialize local volume when switching participants and ignore following updates from server\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [id]);\n\n  const runThrottled = useRunThrottled(VOLUME_CHANGE_THROTTLE);\n\n  const handleRemove = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    openDeleteUserModal();\n    onClose();\n  });\n\n  const handleCancelRequestToSpeak = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    requestToSpeak({\n      value: false,\n    });\n    onClose();\n  });\n\n  const handleMute = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    onClose();\n\n    if (!isAdmin) {\n      handleSetLocalVolume(isMutedByMe ? GROUP_CALL_DEFAULT_VOLUME / GROUP_CALL_VOLUME_MULTIPLIER : VOLUME_ZERO);\n    } else if (shouldRaiseHand) {\n      handleSetLocalVolume((participant?.volume ?? GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER);\n    }\n\n    toggleGroupCallMute({\n      participantId: id!,\n      value: isAdmin ? !shouldRaiseHand : !isMutedByMe,\n    });\n  });\n\n  const handleOpenProfile = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    toggleGroupCallPanel();\n    openChat({\n      id,\n    });\n    onClose();\n  });\n\n  const handleChangeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    handleSetLocalVolume(value);\n\n    runThrottled(() => {\n      if (value === VOLUME_ZERO) {\n        toggleGroupCallMute({\n          participantId: id!,\n          value: true,\n        });\n      } else {\n        setGroupCallParticipantVolume({\n          participantId: id!,\n          volume: Math.floor(value * GROUP_CALL_VOLUME_MULTIPLIER),\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Menu\n        isOpen={isDropdownOpen}\n        ref={menuRef}\n        withPortal\n        onClose={onClose}\n        onCloseAnimationEnd={onCloseAnimationEnd}\n        className=\"participant-menu with-menu-transitions\"\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...menuPositionOptions}\n      >\n        {!isSelf && !shouldRaiseHand && (\n          <div className=\"group\">\n            <div className={buildClassName(\n              'volume-control',\n              localVolume < VOLUME_LOW && 'low',\n              localVolume >= VOLUME_LOW && localVolume < VOLUME_MEDIUM && 'medium',\n              localVolume >= VOLUME_MEDIUM && localVolume < VOLUME_NORMAL && 'normal',\n              localVolume >= VOLUME_NORMAL && 'high',\n            )}\n            >\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={localVolume}\n                onChange={handleChangeVolume}\n              />\n              <div className=\"info\">\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.Speaker}\n                  play={shouldPlay ? speakerIconPlaySegment.toString() : false}\n                  playSegment={speakerIconPlaySegment}\n                  size={SPEAKER_ICON_SIZE}\n                />\n                <span>{localVolume}%</span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"group\">\n          {(isRaiseHand && isSelf) && (\n            <MenuItem\n              icon=\"stop-raising-hand\"\n              onClick={handleCancelRequestToSpeak}\n            >\n              {lang('VoipGroupCancelRaiseHand')}\n            </MenuItem>\n          )}\n          {!isSelf && <MenuItem icon=\"user\" onClick={handleOpenProfile}>{lang('VoipGroupOpenProfile')}</MenuItem>}\n          {!isSelf && (\n            // TODO cross mic\n            <MenuItem\n              icon={isMuted ? (isAdmin && shouldRaiseHand ? 'allow-speak' : 'microphone-alt') : 'microphone-alt'}\n              onClick={handleMute}\n            >\n              {isAdmin\n                ? lang(shouldRaiseHand ? 'VoipGroupAllowToSpeak' : 'VoipMute')\n                : lang(isMutedByMe ? 'VoipGroupUnmuteForMe' : 'VoipGroupMuteForMe')}\n            </MenuItem>\n          )}\n          {!isSelf && isAdmin && (\n            // TODO replace with hand\n            <MenuItem icon=\"delete-user\" destructive onClick={handleRemove}>\n              {lang('VoipGroupUserRemove')}\n            </MenuItem>\n          )}\n        </div>\n      </Menu>\n\n      {!isSelf && isAdmin && (\n        <DeleteMemberModal\n          isOpen={isDeleteUserModalOpen}\n          userId={id}\n          onClose={closeDeleteUserModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n    };\n  },\n)(GroupCallParticipantMenu));\n","import useThrottledCallback from './useThrottledCallback';\n\nexport default function useRunThrottled(ms: number, noFirst?: boolean, deps: any = []) {\n  return useThrottledCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  participant: GroupCallParticipant;\n  noColor?: boolean;\n  className?: string;\n};\n\nconst OutlinedMicrophoneIcon: FC<OwnProps> = ({\n  participant,\n  noColor,\n  className,\n}) => {\n  const { isMuted, isMutedByMe } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const prevIsRaiseHand = usePreviousDeprecated(isRaiseHand);\n  const canSelfUnmute = Boolean(participant?.canSelfUnmute);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevIsMuted = usePreviousDeprecated(isMuted);\n\n  const playSegment: [number, number] = useMemo(() => {\n    if (isMuted && !prevIsMuted) {\n      return [43, 64];\n    }\n\n    if (!isMuted && prevIsMuted) {\n      return [22, 42];\n    }\n\n    if (isRaiseHand && !prevIsRaiseHand) {\n      return [65, 84];\n    }\n\n    if (!shouldRaiseHand && prevIsRaiseHand) {\n      return [0, 21];\n    }\n\n    // TODO cancel request to speak should play in reverse\n    // if (!isRaiseHand && prevIsRaiseHand) {\n    //   return [84, 65];\n    // }\n\n    return isMuted ? [22, 23] : [43, 44];\n    // eslint-disable-next-line\n  }, [isMuted, shouldRaiseHand, isRaiseHand]);\n\n  const microphoneColor: string = useMemo(() => {\n    if (noColor) {\n      return '#ffffff';\n    }\n\n    if (isRaiseHand) {\n      return '#4da6e0';\n    }\n\n    if (shouldRaiseHand || isMutedByMe) {\n      return '#ff706f';\n    }\n\n    if (isSpeaking) {\n      return '#57bc6c';\n    }\n\n    return '#aaaaaa';\n  }, [noColor, isRaiseHand, shouldRaiseHand, isMutedByMe, isSpeaking]);\n\n  return (\n    <AnimatedIcon\n      tgsUrl={LOCAL_TGS_URLS.VoiceOutlined}\n      play={playSegment.toString()}\n      playSegment={playSegment}\n      size={28}\n      color={microphoneColor}\n      className={className}\n      forceAlways\n      nonInteractive\n    />\n  );\n};\n\nexport default memo(OutlinedMicrophoneIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wk7JwPx3\",\"subtitle\":\"ShcCNemD\",\"subtitleText\":\"UZLgp2cx\",\"icon\":\"vRc6jhKf\",\"subtitleBlue\":\"yA7bxEWw\",\"subtitleRed\":\"DnuZwImI\",\"subtitleGreen\":\"BkgYQGFq\",\"avatar\":\"ouHUJ9ff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipant.module.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst GroupCallParticipant: FC<OwnProps & StateProps> = ({\n  participant,\n  peer,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const {\n    isSelf, isMutedByMe, isMuted, hasVideoStream, hasPresentationStream,\n  } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleBeforeContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const hasCustomVolume = Boolean(\n    !isMuted && isSpeaking && participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME,\n  );\n\n  const [aboutText, aboutColor] = useMemo(() => {\n    if (isMutedByMe) {\n      return [lang('VoipGroupMutedForMe'), styles.subtitleRed];\n    }\n\n    if (isRaiseHand) {\n      return [lang('WantsToSpeak'), styles.subtitleBlue];\n    }\n\n    if (hasCustomVolume) {\n      return [\n        lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n          .replace('%%', '%'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (!isMuted && isSpeaking) {\n      return [\n        lang('Speaking'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (isSelf) {\n      return [lang('ThisIsYou'), styles.subtitleBlue];\n    }\n\n    return participant.about ? [participant.about, ''] : [lang('Listening'), styles.subtitleBlue];\n  }, [isMutedByMe, isRaiseHand, hasCustomVolume, isMuted, isSpeaking, isSelf, participant, lang]);\n\n  if (!peer) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      leftElement={<Avatar peer={peer} className={styles.avatar} />}\n      rightElement={<OutlinedMicrophoneIcon participant={participant} className={styles.icon} />}\n      className={styles.root}\n      onClick={handleContextMenu}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      multiline\n      ripple\n      ref={ref}\n    >\n      <FullNameTitle peer={peer} withEmojiStatus className={styles.title} />\n      <span className={buildClassName(styles.subtitle, 'subtitle', aboutColor)}>\n        {hasPresentationStream && <i className=\"icon icon-share-screen\" aria-hidden />}\n        {hasVideoStream && <i className=\"icon icon-video\" aria-hidden />}\n        {hasCustomVolume && <i className=\"icon icon-speaker\" aria-hidden />}\n        <span className={styles.subtitleText}>{renderText(aboutText)}</span>\n      </span>\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      peer: selectUser(global, participant.id) || selectChat(global, participant.id),\n    };\n  },\n)(GroupCallParticipant));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compareFields } from '../../../util/iteratees';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport GroupCallParticipant from './GroupCallParticipant';\n\nimport styles from './GroupCallParticipantList.module.scss';\n\ntype OwnProps = {\n  panelOffset: number;\n  isLandscape: boolean;\n};\n\ntype StateProps = {\n  participantsCount: number;\n  participants?: Record<string, TypeGroupCallParticipant>;\n  canInvite?: boolean;\n};\n\nconst GroupCallParticipantList: FC<OwnProps & StateProps> = ({\n  panelOffset,\n  participants,\n  participantsCount,\n  isLandscape,\n}) => {\n  const {\n    loadMoreGroupCallParticipants,\n  } = getActions();\n\n  const orderedParticipantIds = useMemo(() => {\n    return Object.values(participants || {}).sort(compareParticipants).map((participant) => participant.id);\n  }, [participants]);\n\n  const handleLoadMoreGroupCallParticipants = useLastCallback(() => {\n    loadMoreGroupCallParticipants();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMoreGroupCallParticipants,\n    orderedParticipantIds,\n    orderedParticipantIds.length >= participantsCount,\n  );\n\n  return (\n    <InfiniteScroll\n      items={viewportIds}\n      onLoadMore={getMore}\n      style={`transform: translateY(${panelOffset}px);`}\n      className={buildClassName(styles.root, !isLandscape && styles.portrait)}\n    >\n      {participants && viewportIds?.map(\n        (participantId) => (\n          participants[participantId] && (\n            <GroupCallParticipant\n              key={participantId}\n              teactOrderKey={orderedParticipantIds.indexOf(participantId)}\n              participant={participants[participantId]}\n            />\n          )\n        ),\n      )}\n    </InfiniteScroll>\n  );\n};\n\nfunction compareParticipants(a: TypeGroupCallParticipant, b: TypeGroupCallParticipant) {\n  return compareFields(!a.isMuted, !b.isMuted)\n        || compareFields(a.presentation, b.presentation)\n        || compareFields(a.video, b.video)\n        || compareFields(a.raiseHandRating, b.raiseHandRating);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { participantsCount, participants } = selectActiveGroupCall(global) || {};\n\n    return {\n      participants,\n      participantsCount: participantsCount || 0,\n    };\n  },\n)(GroupCallParticipantList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"npTa6CmI\",\"portrait\":\"v7oB2HTv\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DKuzmnN7\",\"hidden\":\"T_wodAHA\",\"noAnimate\":\"yPCkJzpi\",\"root\":\"eBq1NoLo\",\"speaking\":\"h4NcT6OS\",\"loader\":\"XedVWQii\",\"video\":\"eUXuK9Oz\",\"videoFallback\":\"eTpvBU_b eUXuK9Oz\",\"thumbnailWrapper\":\"R5ULTrF9\",\"thumbnail\":\"cjUWuViy\",\"flipped\":\"O2bTiH2E\",\"pinButton\":\"lPdblo0y\",\"bottomPanel\":\"T1deCDSn\",\"info\":\"LzFFayK3\",\"pinned\":\"B4WZhF9P\",\"name\":\"RBwMAuKp\",\"status\":\"z1ZZTsjC\",\"icon\":\"j1aDzn1H\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { VideoLayout, VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getUserStreams, THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { animate } from '../../../util/animation';\nimport buildClassName from '../../../util/buildClassName';\nimport { fastRaf } from '../../../util/schedulers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipantVideo.module.scss';\n\nconst BLUR_RADIUS = 2;\nconst BLUR_ITERATIONS = 2;\nconst VIDEO_FALLBACK_UPDATE_INTERVAL = 1000;\n\ntype OwnProps = {\n  layout: VideoLayout;\n  setPinned: (participant?: VideoParticipant) => void;\n  pinnedVideo: VideoParticipant | undefined;\n  canPin: boolean;\n  participant: TypeGroupCallParticipant;\n  className?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n};\n\nconst GroupCallParticipantVideo: FC<OwnProps & StateProps> = ({\n  layout,\n  pinnedVideo,\n  setPinned,\n  canPin,\n  className,\n  participant,\n  user,\n  chat,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const thumbnailRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoFallbackRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    x, y, width, height, noAnimate, isRemoved,\n    type,\n  } = layout;\n  const {\n    isSelf, isMutedByMe, isMuted,\n  } = participant;\n  const isPinned = pinnedVideo?.id === participant.id && pinnedVideo?.type === type;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const shouldFlipVideo = type === 'video' && participant.isSelf;\n\n  const status = useMemo(() => {\n    if (isSelf) {\n      return lang('ThisIsYou');\n    }\n\n    if (isMutedByMe) {\n      return lang('VoipGroupMutedForMe');\n    }\n\n    if (isRaiseHand) {\n      return lang('WantsToSpeak');\n    }\n\n    if (isMuted || !isSpeaking) {\n      return lang('Listening');\n    }\n\n    if (participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME) {\n      return lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n        .replace('%%', '%');\n    }\n\n    return lang('Speaking');\n  }, [isSelf, isMutedByMe, isRaiseHand, isMuted, isSpeaking, participant, lang]);\n\n  const prevLayoutRef = useRef<VideoLayout>();\n  if (!isRemoved) {\n    prevLayoutRef.current = layout;\n  }\n  const {\n    x: prevX, y: prevY, width: prevWidth, height: prevHeight,\n  } = prevLayoutRef.current || {};\n\n  const [currentX, currentY, currentWidth, currentHeight] = isRemoved\n    ? [prevX, prevY, prevWidth, prevHeight] : [x, y, width, height];\n\n  const [isHidden, setIsHidden] = useState(!noAnimate);\n\n  const streams = getUserStreams(user?.id || chat!.id);\n  const actualStream = type === 'video' ? streams?.video : streams?.presentation;\n  const streamRef = useRef(actualStream);\n  if (actualStream?.active && actualStream?.getVideoTracks()[0].enabled) {\n    streamRef.current = actualStream;\n  }\n  const stream = streamRef.current;\n\n  const handleInactive = useLastCallback(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    // eslint-disable-next-line no-null/no-null\n    video.srcObject = null;\n  });\n\n  useEffect(() => {\n    stream?.addEventListener('inactive', handleInactive);\n    return () => {\n      stream?.removeEventListener('inactive', handleInactive);\n    };\n  }, [handleInactive, stream]);\n\n  useEffect(() => {\n    setIsHidden(false);\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleCanPlay = useLastCallback(() => {\n    setIsLoading(false);\n  });\n\n  // When video stream is removed, the video element starts showing empty black screen.\n  // To avoid that, we hide the video element and show the fallback frame instead, which is constantly updated\n  // every VIDEO_FALLBACK_UPDATE_INTERVAL milliseconds.\n  useInterval(() => {\n    if (!stream?.active) return;\n    const video = videoRef.current!;\n    const canvas = videoFallbackRef.current!;\n\n    requestMutation(() => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      canvas.getContext('2d')!.drawImage(video, 0, 0, canvas.width, canvas.height);\n    });\n  }, VIDEO_FALLBACK_UPDATE_INTERVAL);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const thumbnail = thumbnailRef.current;\n    if (!video || !thumbnail || !stream) return undefined;\n\n    const ctx = thumbnail.getContext('2d', { alpha: false });\n    if (!ctx) return undefined;\n\n    let isDrawing = true;\n    requestMutation(() => {\n      if (!isDrawing) return;\n      thumbnail.width = 16;\n      thumbnail.height = 16;\n      ctx.filter = 'blur(2px)';\n\n      const draw = () => {\n        if (!isDrawing) return false;\n        if (!stream.active) {\n          return false;\n        }\n        ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, thumbnail.width, thumbnail.height);\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, thumbnail.width, thumbnail.height, BLUR_RADIUS, BLUR_ITERATIONS);\n        }\n        return true;\n      };\n\n      animate(draw, fastRaf);\n    });\n\n    return () => {\n      isDrawing = false;\n    };\n  }, [stream]);\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const handleClickPin = useCallback(() => {\n    setPinned(!isPinned ? {\n      id: user?.id || chat!.id,\n      type,\n    } : undefined);\n  }, [chat, isPinned, setPinned, type, user?.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.wrapper,\n        (isHidden || isRemoved) && styles.hidden,\n        noAnimate && styles.noAnimate,\n        className,\n        isPinned && styles.pinned,\n      )}\n      style={`--x: ${currentX}px; --y: ${currentY}px; --width: ${currentWidth}px; --height: ${currentHeight}px;`}\n      ref={ref}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={canPin ? handleClickPin : undefined}\n    >\n      <div\n        className={buildClassName(\n          styles.root,\n          isSpeaking && styles.speaking,\n        )}\n      >\n        {isLoading && (\n          <Skeleton className={buildClassName(styles.video, styles.loader)} />\n        )}\n        {stream && (\n          <video\n            className={buildClassName(styles.video, shouldFlipVideo && styles.flipped)}\n            muted\n            autoPlay\n            playsInline\n            srcObject={stream}\n            ref={videoRef}\n            onCanPlay={handleCanPlay}\n          />\n        )}\n        <canvas\n          className={buildClassName(styles.videoFallback, shouldFlipVideo && styles.flipped)}\n          ref={videoFallbackRef}\n        />\n        <div className={styles.thumbnailWrapper}>\n          <canvas\n            className={buildClassName(styles.thumbnail, shouldFlipVideo && styles.flipped)}\n            ref={thumbnailRef}\n          />\n        </div>\n        {canPin && (\n          <Button\n            round\n            size=\"smaller\"\n            ripple\n            color=\"translucent\"\n            className={styles.pinButton}\n            ariaLabel={lang(isPinned ? 'lng_group_call_context_unpin_camera' : 'lng_group_call_context_pin_camera')}\n            onClick={handleClickPin}\n          >\n            <i className={buildClassName('icon', isPinned ? 'icon-unpin' : 'icon-pin')} />\n          </Button>\n        )}\n        <div className={styles.bottomPanel}>\n          <div className={styles.info}>\n            <FullNameTitle peer={user || chat!} className={styles.name} />\n            <div className={styles.status}>{status}</div>\n          </div>\n          <OutlinedMicrophoneIcon participant={participant} className={styles.icon} noColor />\n        </div>\n      </div>\n\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n    };\n  },\n)(GroupCallParticipantVideo));\n","export const vibrateShort = () => {\n  navigator.vibrate?.(50);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lKdhQ5pw\",\"spinner\":\"tyQNJC6B\",\"spinnerVisible\":\"LowChABq\",\"mutedByAdmin\":\"Ynow5UuE\",\"canUnmute\":\"bjKqp3SI\",\"icon\":\"Ea1XnQaX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallConnectionState } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall, selectGroupCallParticipant } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { vibrateShort } from '../../../util/vibrate';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './MicrophoneButton.module.scss';\n\nconst CONNECTION_STATE_DEFAULT = 'discarded';\n\ntype OwnProps = {\n  className?: string;\n};\n\ntype StateProps = {\n  connectionState?: GroupCallConnectionState;\n  hasRequestedToSpeak: boolean;\n  isMuted?: boolean;\n  canSelfUnmute?: boolean;\n  noAudioStream: boolean;\n};\n\nconst REQUEST_TO_SPEAK_THROTTLE = 3000;\nconst HOLD_TO_SPEAK_TIME = 200;\nconst ICON_SIZE = 36;\n\nconst MicrophoneButton: FC<OwnProps & StateProps> = ({\n  className,\n  noAudioStream,\n  canSelfUnmute,\n  isMuted,\n  connectionState,\n}) => {\n  const {\n    toggleGroupCallMute,\n    requestToSpeak,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useOldLang();\n  const muteMouseDownState = useRef('up');\n\n  const [isRequestingToSpeak, setIsRequestingToSpeak] = useState(false);\n  const isConnecting = connectionState !== 'connected';\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevShouldRaiseHand = usePreviousDeprecated(shouldRaiseHand);\n\n  useEffect(() => {\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      playGroupCallSound({ sound: 'allowTalk' });\n    }\n  }, [playGroupCallSound, prevShouldRaiseHand, shouldRaiseHand]);\n\n  // Voice mini\n  // unmuted -> muted [69, 99]\n  // muted -> unmuted [36, 69]\n  // raise -> muted [0, 36]\n  // muted -> raise [99, 136]\n  // unmuted -> raise [136, 172]\n  // TODO should probably move to other component\n  const playSegment: [number, number] = useMemo(() => {\n    if (isRequestingToSpeak) {\n      const r = Math.floor(Math.random() * 100);\n      return (r < 32 ? [0, 120]\n        : (r < 64 ? [120, 240]\n          : (r < 97 ? [240, 420]\n            : [420, 540]\n          )\n        )\n      );\n    }\n    if (!prevShouldRaiseHand && shouldRaiseHand) {\n      return noAudioStream ? [99, 135] : [136, 172];\n    }\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      return [0, 36];\n    }\n    if (!shouldRaiseHand) {\n      return noAudioStream ? [69, 99] : [36, 69];\n    }\n    return [0, 0];\n  }, [prevShouldRaiseHand, isRequestingToSpeak, noAudioStream, shouldRaiseHand]);\n\n  const animatedIconName = isRequestingToSpeak ? 'HandFilled' : 'VoiceMini';\n\n  const toggleMute = useCallback(() => {\n    vibrateShort();\n    toggleGroupCallMute();\n  }, [toggleGroupCallMute]);\n\n  const handleMouseDownMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      if (isRequestingToSpeak) return;\n      vibrateShort();\n      requestToSpeak();\n      setIsRequestingToSpeak(true);\n      setTimeout(() => {\n        setIsRequestingToSpeak(false);\n      }, REQUEST_TO_SPEAK_THROTTLE);\n      return;\n    }\n    muteMouseDownState.current = 'down';\n    if (noAudioStream) {\n      setTimeout(() => {\n        if (muteMouseDownState.current === 'down') {\n          muteMouseDownState.current = 'hold';\n          toggleMute();\n        }\n      }, HOLD_TO_SPEAK_TIME);\n    }\n  }, [isRequestingToSpeak, noAudioStream, requestToSpeak, shouldRaiseHand, toggleMute]);\n\n  const handleMouseUpMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      return;\n    }\n    toggleMute();\n    muteMouseDownState.current = 'up';\n  }, [shouldRaiseHand, toggleMute]);\n\n  return (\n    <Button\n      round\n      size=\"default\"\n      className={buildClassName(\n        styles.root,\n        !isConnecting && noAudioStream && styles.canUnmute,\n        !isConnecting && shouldRaiseHand && styles.mutedByAdmin,\n        className,\n      )}\n      onMouseDown={handleMouseDownMute}\n      onMouseUp={handleMouseUpMute}\n      ariaLabel={lang(isMuted ? 'VoipUnmute' : 'VoipMute')}\n      disabled={isConnecting}\n    >\n      <AnimatedIcon\n        tgsUrl={LOCAL_TGS_URLS[animatedIconName]}\n        size={ICON_SIZE}\n        play={playSegment.toString()}\n        playSegment={playSegment}\n        className={styles.icon}\n        forceAlways\n      />\n      <Spinner className={buildClassName(styles.spinner, isConnecting && styles.spinnerVisible)} color=\"white\" />\n    </Button>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const groupCall = selectActiveGroupCall(global);\n\n    const { connectionState } = groupCall || {};\n    const meParticipant = groupCall && selectGroupCallParticipant(global, groupCall.id, global.currentUserId!);\n\n    const {\n      raiseHandRating, hasAudioStream, canSelfUnmute, isMuted,\n    } = meParticipant || {};\n\n    return {\n      connectionState: connectionState || CONNECTION_STATE_DEFAULT,\n      hasRequestedToSpeak: Boolean(raiseHandRating),\n      noAudioStream: !hasAudioStream,\n      canSelfUnmute,\n      isMuted,\n    };\n  },\n)(MicrophoneButton));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OsO5GKfn\",\"panelWrapper\":\"cUVoePr_\",\"panel\":\"Thuz79M3\",\"panelScrollTrigger\":\"zoK6Y6IS\",\"panelHeader\":\"DMBtCL9Z\",\"scrolled\":\"GdEH1Agb\",\"fullscreen\":\"JJx0QI2w\",\"landscape\":\"wamCuzMB\",\"headerButton\":\"gmyieSid\",\"firstButton\":\"hVnn6KBp\",\"lastButton\":\"iy78A5rG\",\"panelHeaderText\":\"TwEEA77i\",\"title\":\"pNZ9skLf\",\"bigger\":\"NumT3v5i\",\"subtitle\":\"gmfUKabx\",\"participants\":\"iTeC_RxH\",\"participantVideos\":\"PZmKIdTl\",\"addParticipantButton\":\"clmu2oBt\",\"videos\":\"ATwoMlAV\",\"mainVideoContainer\":\"hqFon3dV\",\"videosHeader\":\"KPHc659W\",\"appFullscreen\":\"cl2sfoBF\",\"videosHeaderLastButton\":\"_t50HVNJ\",\"videosContent\":\"oEEQZilE\",\"actions\":\"uGzi9s97\",\"actionButton\":\"foXbVcnN\",\"destructive\":\"YIR9Z9CZ\",\"canRequestToSpeak\":\"ZoiZQu_O\",\"muted\":\"wpvv1V6m\",\"portrait\":\"R6HQcMwx\",\"noVideoParticipants\":\"aepCFyJQ\",\"noSidebar\":\"XjgP21E6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  GroupCallConnectionState, GroupCallParticipant as TypeGroupCallParticipant,\n} from '../../../lib/secret-sauce';\nimport type { VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { IS_SCREENSHARE_SUPPORTED } from '../../../lib/secret-sauce';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport {\n  selectCanInviteToActiveGroupCall,\n  selectGroupCall,\n  selectGroupCallParticipant,\n  selectIsAdminInActiveGroupCall,\n} from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useFullscreenStatus } from '../../../hooks/window/useFullscreen';\nimport useGroupCallVideoLayout from './hooks/useGroupCallVideoLayout';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Modal from '../../ui/Modal';\nimport GroupCallParticipantList from './GroupCallParticipantList';\nimport GroupCallParticipantVideo from './GroupCallParticipantVideo';\nimport MicrophoneButton from './MicrophoneButton';\n\nimport styles from './GroupCall.module.scss';\n\nconst INTERSECTION_THROTTLE = 200;\n\nexport type OwnProps = {\n  groupCallId: string;\n};\n\ntype StateProps = {\n  isCallPanelVisible: boolean;\n  connectionState: GroupCallConnectionState;\n  title?: string;\n  meParticipant?: TypeGroupCallParticipant;\n  participantsCount?: number;\n  isAdmin: boolean;\n  participants: Record<string, TypeGroupCallParticipant>;\n  canInvite: boolean;\n};\n\nconst GroupCall: FC<OwnProps & StateProps> = ({\n  groupCallId,\n  isCallPanelVisible,\n  connectionState,\n  participantsCount,\n  title,\n  meParticipant,\n  isAdmin,\n  participants,\n  canInvite,\n}) => {\n  const {\n    toggleGroupCallVideo,\n    toggleGroupCallPresentation,\n    leaveGroupCall,\n    toggleGroupCallPanel,\n    connectToActiveGroupCall,\n    playGroupCallSound,\n    createGroupCallInviteLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const primaryVideoContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const secondaryVideoContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const panelScrollTriggerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const panelRef = useRef<HTMLDivElement>(null);\n\n  const [isLeaving, setIsLeaving] = useState(false);\n  const isOpen = !isCallPanelVisible && !isLeaving;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: panelRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !isOpen,\n  });\n\n  const hasScrolled = !useIsIntersecting(panelScrollTriggerRef, isOpen ? observe : undefined);\n\n  const { isMobile, isLandscape } = useAppLayout();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const [isSidebarOpen, openSidebar, closeSidebar] = useFlag(true);\n  const isLandscapeLayout = Boolean(isFullscreen && isLandscape);\n  const isAppFullscreen = useFullscreenStatus();\n\n  const firstPresentation = useMemo(() => {\n    return Object.values(participants).find(({ presentation }) => presentation);\n  }, [participants]);\n  const videoParticipants = useMemo(() => Object.values(participants)\n    .filter(({ video, presentation }) => video || presentation)\n    .flatMap(({ id, video, presentation }) => compact([\n      video ? {\n        id,\n        type: 'video' as const,\n      } : undefined,\n      presentation ? {\n        id,\n        type: 'screen' as const,\n      } : undefined,\n    ])),\n  [participants]);\n  const hasVideoParticipants = videoParticipants.length > 0;\n\n  const groupCallTitle = title || lang('VoipGroupVoiceChat');\n  const membersString = lang('Participants', participantsCount, 'i');\n\n  const [isConfirmLeaveModalOpen, openConfirmLeaveModal, closeConfirmLeaveModal] = useFlag();\n  const [isEndGroupCallModal, setIsEndGroupCallModal] = useState(false);\n  const [shouldEndGroupCall, setShouldEndGroupCall] = useState(false);\n\n  const hasVideo = meParticipant?.hasVideoStream;\n  const hasPresentation = meParticipant?.hasPresentationStream;\n  const hasAudioStream = meParticipant?.hasAudioStream;\n  const isConnecting = connectionState !== 'connected';\n  const canSelfUnmute = meParticipant?.canSelfUnmute;\n  const canRequestToSpeak = !canSelfUnmute && !hasAudioStream;\n\n  useEffect(() => {\n    if (connectionState === 'connected') {\n      playGroupCallSound({ sound: 'join' });\n    } else if (connectionState === 'reconnecting') {\n      playGroupCallSound({ sound: 'connecting' });\n    }\n  }, [connectionState]);\n\n  const handleCloseConfirmLeaveModal = useLastCallback(() => {\n    closeConfirmLeaveModal();\n    setIsEndGroupCallModal(false);\n  });\n\n  const handleToggleFullscreen = useLastCallback(() => {\n    if (!containerRef.current || isMobile) return;\n\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  });\n\n  const handleToggleSidebar = useLastCallback(() => {\n    if (isSidebarOpen) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  });\n\n  const handleToggleGroupCallPanel = useLastCallback(() => {\n    toggleGroupCallPanel();\n  });\n\n  const handleInviteMember = useLastCallback(() => {\n    createGroupCallInviteLink();\n  });\n\n  const handleClickVideo = useLastCallback(() => {\n    toggleGroupCallVideo();\n  });\n\n  useEffect(() => {\n    connectToActiveGroupCall();\n  }, [connectToActiveGroupCall, groupCallId]);\n\n  const handleLeaveGroupCall = useLastCallback(() => {\n    if (isAdmin && !isConfirmLeaveModalOpen) {\n      openConfirmLeaveModal();\n      return;\n    }\n    playGroupCallSound({ sound: 'leave' });\n    setIsLeaving(true);\n    closeConfirmLeaveModal();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (!isLeaving) return;\n\n    leaveGroupCall({\n      shouldDiscard: shouldEndGroupCall,\n    });\n  });\n\n  const handleToggleGroupCallPresentation = useLastCallback(() => {\n    toggleGroupCallPresentation();\n  });\n\n  const canPinVideo = videoParticipants.length > 1 && !isMobile;\n  const isLandscapeWithVideos = isLandscapeLayout && hasVideoParticipants;\n  const [pinnedVideo, setPinnedVideo] = useState<VideoParticipant | undefined>(undefined);\n  const {\n    videoLayout,\n    panelOffset,\n  } = useGroupCallVideoLayout({\n    primaryContainerRef: primaryVideoContainerRef,\n    secondaryContainerRef: secondaryVideoContainerRef,\n    videoParticipants,\n    isLandscapeLayout,\n    pinnedVideo,\n  });\n\n  const handleSetPinnedVideo = useLastCallback((video: VideoParticipant | undefined) => {\n    setPinnedVideo(video);\n    if (video && !isFullscreen) {\n      openFullscreen();\n    }\n  });\n\n  const handleOpenFirstPresentation = useLastCallback(() => {\n    if (!firstPresentation) return;\n\n    setPinnedVideo({\n      id: firstPresentation.id,\n      type: 'screen',\n    });\n  });\n\n  useEffect(handleOpenFirstPresentation, [handleOpenFirstPresentation, Boolean(firstPresentation)]);\n\n  useEffect(() => {\n    if (!pinnedVideo) return;\n    if (!videoParticipants.some((l) => l.type === pinnedVideo.type && l.id === pinnedVideo.id)) {\n      setPinnedVideo(undefined);\n    }\n  }, [pinnedVideo, videoLayout, videoParticipants]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={toggleGroupCallPanel}\n      className={buildClassName(\n        styles.root,\n        (isFullscreen || isMobile) && styles.fullscreen,\n        isAppFullscreen && styles.appFullscreen,\n        isLandscapeLayout && styles.landscape,\n        !hasVideoParticipants && styles.noVideoParticipants,\n        !isLandscapeLayout && styles.portrait,\n        !isSidebarOpen && isLandscapeWithVideos && styles.noSidebar,\n      )}\n      dialogRef={containerRef}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {isLandscapeWithVideos && (\n        <div className={styles.videos}>\n          <div className={styles.videosHeader}>\n            {!isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleFullscreen}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n              >\n                <i\n                  className={buildClassName('icon', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')}\n                  aria-hidden\n                />\n              </Button>\n            )}\n\n            <h3 className={buildClassName(styles.title, styles.bigger)}>\n              {title || lang('VoipGroupVoiceChat')}\n            </h3>\n\n            {isLandscapeWithVideos && !isSidebarOpen && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                className={buildClassName(styles.headerButton, styles.videosHeaderLastButton)}\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrExpandPanel')}\n              >\n                <i className=\"icon icon-sidebar\" aria-hidden />\n              </Button>\n            )}\n          </div>\n\n          <div\n            className={styles.videosContent}\n            ref={primaryVideoContainerRef}\n          />\n        </div>\n      )}\n\n      <div className={styles.panelWrapper} ref={panelRef}>\n        <div className={buildClassName(styles.panel, 'custom-scroll')}>\n          <div className={styles.panelScrollTrigger} ref={panelScrollTriggerRef} />\n\n          <div className={buildClassName(styles.panelHeader, hasScrolled && styles.scrolled)}>\n            {!isLandscapeWithVideos && !isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                onClick={handleToggleFullscreen}\n                ariaLabel={lang('AccSwitchToFullscreen')}\n              >\n                <i className=\"icon icon-fullscreen\" aria-hidden />\n              </Button>\n            )}\n\n            {isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleGroupCallPanel}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang('Close')}\n              >\n                <i\n                  className={buildClassName('icon', 'icon-close')}\n                  aria-hidden\n                />\n              </Button>\n            )}\n\n            {isLandscapeWithVideos && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrCollapsePanel')}\n              >\n                <i className=\"icon icon-sidebar\" aria-hidden />\n              </Button>\n            )}\n\n            <div className={styles.panelHeaderText}>\n              <h3 className={buildClassName(styles.title, isLandscapeWithVideos && styles.bigger)}>\n                {isLandscapeWithVideos ? membersString : groupCallTitle}\n              </h3>\n              {!isLandscapeWithVideos && (\n                <span className={styles.subtitle}>\n                  {membersString}\n                </span>\n              )}\n            </div>\n\n            {!isLandscapeWithVideos && canInvite && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.lastButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleInviteMember}\n                ariaLabel={lang('VoipGroupInviteMember')}\n              >\n                <i className=\"icon icon-add-user\" aria-hidden />\n              </Button>\n            )}\n          </div>\n\n          <div className={styles.participants}>\n            <div\n              className={styles.participantVideos}\n              ref={secondaryVideoContainerRef}\n              style={`height: ${panelOffset}px;`}\n            >\n              {videoLayout.map((layout) => {\n                const participant = participants[layout.participantId];\n                if (!layout.isRemounted || !participant) {\n                  return (\n                    <div\n                      teactOrderKey={layout.orderKey}\n                      key={`${layout.participantId}_${layout.type}`}\n                    />\n                  );\n                }\n\n                return (\n                  <GroupCallParticipantVideo\n                    teactOrderKey={layout.orderKey}\n                    key={`${layout.participantId}_${layout.type}`}\n                    layout={layout}\n                    canPin={canPinVideo}\n                    setPinned={handleSetPinnedVideo}\n                    pinnedVideo={pinnedVideo}\n                    participant={participant}\n                  />\n                );\n              })}\n            </div>\n            <GroupCallParticipantList\n              panelOffset={panelOffset}\n              isLandscape={isLandscapeWithVideos}\n            />\n          </div>\n        </div>\n\n        <FloatingActionButton\n          key=\"add-participant\"\n          isShown={isLandscapeWithVideos && canInvite}\n          onClick={handleInviteMember}\n          className={styles.addParticipantButton}\n          ariaLabel={lang('VoipGroupInviteMember')}\n        >\n          <i className=\"icon icon-add-user-filled\" aria-hidden />\n        </FloatingActionButton>\n      </div>\n\n      <div className={styles.mainVideoContainer}>\n        {videoLayout.map((layout) => {\n          const participant = participants[layout.participantId];\n          if (layout.isRemounted || !participant) {\n            return (\n              <div\n                teactOrderKey={layout.orderKey}\n                key={`${layout.participantId}_${layout.type}`}\n              />\n            );\n          }\n          return (\n            <GroupCallParticipantVideo\n              teactOrderKey={layout.orderKey}\n              key={`${layout.participantId}_${layout.type}`}\n              layout={layout}\n              canPin={canPinVideo}\n              setPinned={handleSetPinnedVideo}\n              pinnedVideo={pinnedVideo}\n              participant={participant}\n              className={styles.video}\n            />\n          );\n        })}\n      </div>\n\n      <div className={styles.actions}>\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleClickVideo}\n          ariaLabel={lang(hasVideo ? 'VoipStopVideo' : 'VoipStartVideo')}\n          disabled={isConnecting}\n        >\n          <i className={buildClassName('icon', !hasVideo ? 'icon-video-stop' : 'icon-video')} aria-hidden />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleToggleGroupCallPresentation}\n          ariaLabel={lang(hasPresentation ? 'lng_group_call_screen_share_stop' : 'lng_group_call_tooltip_screen')}\n          disabled={isConnecting || !IS_SCREENSHARE_SUPPORTED}\n        >\n          <i\n            className={buildClassName('icon', !hasPresentation ? 'icon-share-screen-stop' : 'icon-share-screen')}\n            aria-hidden\n          />\n        </Button>\n\n        <MicrophoneButton className={styles.actionButton} />\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          ariaLabel={lang('lng_group_call_settings')}\n          disabled\n        >\n          <i className=\"icon icon-settings-filled\" aria-hidden />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            styles.destructive,\n          )}\n          onClick={handleLeaveGroupCall}\n          ariaLabel={lang('lng_group_call_leave')}\n        >\n          <i className=\"icon icon-close\" aria-hidden />\n        </Button>\n      </div>\n\n      <Modal\n        isOpen={isConfirmLeaveModalOpen}\n        onClose={handleCloseConfirmLeaveModal}\n        className=\"error\"\n        title={lang(isEndGroupCallModal ? 'VoipGroupEndAlertTitle' : 'VoipGroupLeaveAlertTitle')}\n      >\n        <p>{lang(isEndGroupCallModal ? 'VoipGroupEndAlertText' : 'VoipGroupLeaveAlertText')}</p>\n        {!isEndGroupCallModal && (\n          <Checkbox\n            label={lang('VoipGroupEndChat')}\n            checked={shouldEndGroupCall}\n            onCheck={setShouldEndGroupCall}\n          />\n        )}\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" onClick={handleLeaveGroupCall}>\n            {lang(isEndGroupCallModal ? 'VoipGroupEnd' : 'VoipGroupLeave')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseConfirmLeaveModal}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { groupCallId }): StateProps => {\n    const {\n      connectionState, title, participants, participantsCount, chatId,\n    } = selectGroupCall(global, groupCallId)! || {};\n\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n\n    return {\n      connectionState,\n      title: title || chat?.title,\n      participantsCount,\n      meParticipant: selectGroupCallParticipant(global, groupCallId, global.currentUserId!),\n      isCallPanelVisible: Boolean(selectTabState(global).isCallPanelVisible),\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n      participants,\n      canInvite: selectCanInviteToActiveGroupCall(global),\n    };\n  },\n)(GroupCall));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\n\nconst PADDING_HORIZONTAL = 10;\nconst PADDING_VERTICAL = 8;\nconst PREFERRED_PANEL_VIDEO_HEIGHT = 240;\n\nexport type VideoLayout = {\n  participantId: string;\n  type: 'video' | 'screen';\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  shouldRemount?: boolean;\n  isRemounted?: boolean;\n  noAnimate?: boolean;\n  isRemoved?: boolean;\n  orderKey: number;\n};\n\nexport type VideoParticipant = {\n  id: string;\n  type: 'video' | 'screen';\n};\n\nexport default function useGroupCallVideoLayout({\n  primaryContainerRef,\n  secondaryContainerRef,\n  videoParticipants,\n  isLandscapeLayout,\n  pinnedVideo,\n}: {\n  primaryContainerRef: RefObject<HTMLDivElement>;\n  secondaryContainerRef: RefObject<HTMLDivElement>;\n  videoParticipants: VideoParticipant[];\n  isLandscapeLayout: boolean;\n  pinnedVideo: VideoParticipant | undefined;\n}) {\n  const [videoLayout, setVideoLayout] = useState<VideoLayout[]>([]);\n  const [panelOffset, setPanelOffset] = useState(0);\n  const videosCount = videoParticipants.length;\n  const prevVideosCount = usePreviousDeprecated(videosCount);\n  const prevVideoParticipants = usePreviousDeprecated(videoParticipants);\n  const removedVideoParticipants = useMemo(() => {\n    return prevVideoParticipants?.filter(\n      ({ id, type }) => !videoParticipants.some((p) => p.id === id && p.type === type),\n    );\n  }, [prevVideoParticipants, videoParticipants]);\n\n  const recalculateLayout = useLastCallback(() => {\n    const primaryContainer = primaryContainerRef.current;\n    const secondaryContainer = secondaryContainerRef.current;\n    if (!secondaryContainer) return;\n\n    const removed = prevVideosCount !== undefined && prevVideosCount > videosCount\n      ? prevVideosCount - videosCount : 0;\n\n    const {\n      x: secondaryInitialX,\n      y: secondaryInitialY,\n      width: secondaryContainerWidth,\n    } = secondaryContainer.getBoundingClientRect();\n\n    const layout: VideoLayout[] = [];\n    if (pinnedVideo !== undefined || !primaryContainer || !isLandscapeLayout) {\n      const isRemounted = true;\n      let skip = false;\n      let pinnedSkipIndex = 0;\n      let pinnedPush: VideoLayout | undefined;\n      let participants = videoParticipants;\n      if (pinnedVideo && primaryContainer && isLandscapeLayout) {\n        pinnedSkipIndex = participants\n          .findIndex(({ id, type }) => id === pinnedVideo.id && type === pinnedVideo.type);\n        if (pinnedSkipIndex !== -1) {\n          const {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n          } = primaryContainer.getBoundingClientRect();\n\n          const { id: participantId, type } = pinnedVideo;\n\n          pinnedPush = {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n            participantId,\n            type,\n            orderKey: pinnedSkipIndex,\n          };\n          skip = true;\n          participants = participants\n            .filter(({ id, type: videoType }) => id !== participantId || videoType !== pinnedVideo.type);\n        }\n      }\n\n      const secondaryVideosCounts = skip ? videosCount - 1 : videosCount;\n\n      const isFirstBig = secondaryVideosCounts % 2 === 1;\n      const columns = 2;\n      const rows = Math.ceil(secondaryVideosCounts / columns);\n      const smallWidth = (secondaryContainerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n      const heightTotal = Math.max(0, isFirstBig\n        ? (PREFERRED_PANEL_VIDEO_HEIGHT + (rows - 1) * smallWidth + (rows - 1) * PADDING_VERTICAL)\n        : rows * smallWidth + (rows - 1) * PADDING_VERTICAL);\n\n      for (let i = 0; i < secondaryVideosCounts; i++) {\n        const isBig = isFirstBig && i === 0;\n        const width = isBig ? secondaryContainerWidth : smallWidth;\n        const height = isBig ? PREFERRED_PANEL_VIDEO_HEIGHT : smallWidth;\n\n        const realIndex = isFirstBig && i !== 0 ? i + 1 : i;\n\n        const x = (isRemounted ? 0 : secondaryInitialX) + (realIndex % columns) * (width + PADDING_HORIZONTAL);\n        const y = (isRemounted ? 0 : secondaryInitialY) + (isFirstBig && i !== 0 ? (\n          PREFERRED_PANEL_VIDEO_HEIGHT + PADDING_VERTICAL\n          + (Math.floor(realIndex / columns) - 1) * (height + PADDING_VERTICAL)\n        ) : (\n          Math.floor(realIndex / columns) * (height + PADDING_VERTICAL)\n        ));\n        layout.push({\n          x,\n          y,\n          width,\n          height,\n          shouldRemount: !isRemounted,\n          isRemounted,\n          noAnimate: true,\n          participantId: participants[i].id,\n          type: participants[i].type,\n          orderKey: i >= pinnedSkipIndex ? i + 1 : i,\n        });\n      }\n\n      if (pinnedPush) {\n        layout.splice(pinnedSkipIndex, 0, pinnedPush);\n      }\n\n      if (removedVideoParticipants) {\n        for (let i = 0; i < removed; i++) {\n          layout.push({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            isRemounted,\n            isRemoved: true,\n            participantId: removedVideoParticipants[i].id,\n            type: removedVideoParticipants[i].type,\n            orderKey: i + videosCount,\n          });\n        }\n      }\n\n      setPanelOffset(heightTotal);\n      setVideoLayout(layout);\n      return;\n    }\n\n    const {\n      x: initialX,\n      y: initialY,\n      width: containerWidth,\n      height: containerHeight,\n    } = primaryContainer.getBoundingClientRect();\n\n    const columns = calculateColumnsCount(videosCount);\n    const rows = Math.ceil(videosCount / columns);\n    const totalGridSize = rows * columns;\n    const shouldFillLastRow = totalGridSize > videosCount;\n    const width = (containerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n    const height = (containerHeight - (rows - 1) * PADDING_VERTICAL) / rows;\n\n    const lastRowWidth = width * (videosCount % columns);\n    for (let i = 0; i < videosCount; i++) {\n      const row = Math.floor(i / columns);\n      const shouldCenter = shouldFillLastRow && row === rows - 1;\n      const x = initialX + (i % columns) * (width + PADDING_HORIZONTAL)\n        + (shouldCenter ? (containerWidth - lastRowWidth) / 2 : 0);\n      const y = initialY + Math.floor(i / columns) * (height + PADDING_VERTICAL);\n      layout.push({\n        x,\n        y,\n        width,\n        height,\n        participantId: videoParticipants[i].id,\n        type: videoParticipants[i].type,\n        orderKey: i,\n      });\n    }\n\n    if (removedVideoParticipants) {\n      for (let i = 0; i < removed; i++) {\n        layout.push({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n          isRemoved: true,\n          participantId: removedVideoParticipants[i].id,\n          type: removedVideoParticipants[i].type,\n          orderKey: i + videosCount,\n        });\n      }\n    }\n\n    setPanelOffset(0);\n    setVideoLayout(layout);\n  });\n\n  useEffect(recalculateLayout, [\n    recalculateLayout, videoParticipants, isLandscapeLayout, pinnedVideo,\n  ]);\n\n  useResizeObserver(primaryContainerRef, recalculateLayout, !primaryContainerRef.current);\n  useResizeObserver(secondaryContainerRef, recalculateLayout, !secondaryContainerRef.current);\n\n  return {\n    videoLayout, panelOffset,\n  };\n}\n\nfunction calculateColumnsCount(videosCount: number) {\n  if (videosCount >= 25) {\n    return 5;\n  } else if (videosCount >= 13) {\n    return 4;\n  } else if (videosCount >= 7) {\n    return 3;\n  } else if (videosCount >= 3) {\n    return 2;\n  } else {\n    return 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiGroupCall, ApiUser } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { selectActiveGroupCall, selectPhoneCallUser } from '../../global/selectors/calls';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ActiveCallHeader.scss';\n\ntype StateProps = {\n  isCallPanelVisible?: boolean;\n  groupCall?: ApiGroupCall;\n  phoneCallUser?: ApiUser;\n};\n\nconst ActiveCallHeader: FC<StateProps> = ({\n  groupCall,\n  phoneCallUser,\n  isCallPanelVisible,\n}) => {\n  const { toggleGroupCallPanel } = getActions();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    document.body.classList.toggle('has-call-header', Boolean(isCallPanelVisible));\n    window.electron?.setTrafficLightPosition(isCallPanelVisible ? 'lowered' : 'standard');\n\n    return () => {\n      document.body.classList.toggle('has-call-header', false);\n      window.electron?.setTrafficLightPosition('standard');\n    };\n  }, [isCallPanelVisible]);\n\n  function handleToggleGroupCallPanel() {\n    toggleGroupCallPanel();\n  }\n\n  if (!groupCall && !phoneCallUser) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'ActiveCallHeader',\n        isCallPanelVisible && 'open',\n      )}\n      onClick={handleToggleGroupCallPanel}\n    >\n      <span className=\"title\">{phoneCallUser?.firstName || groupCall?.title || lang('VoipGroupVoiceChat')}</span>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    return {\n      groupCall: tabState.isMasterTab ? selectActiveGroupCall(global) : undefined,\n      isCallPanelVisible: tabState.isCallPanelVisible,\n      phoneCallUser: tabState.isMasterTab ? selectPhoneCallUser(global) : undefined,\n    };\n  },\n)(ActiveCallHeader));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lBO3RZUM\",\"button\":\"ch2sqAKW\",\"active\":\"OQxlsRp7\",\"button-text\":\"aHguvLcL\",\"buttonText\":\"aHguvLcL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\nimport styles from './PhoneCallButton.module.scss';\n\ntype OwnProps = {\n  onClick: VoidFunction;\n  label: string;\n  icon?: IconName;\n  iconClassName?: string;\n  customIcon?: React.ReactNode;\n  className?: string;\n  isDisabled?: boolean;\n  isActive?: boolean;\n};\n\nconst PhoneCallButton: FC<OwnProps> = ({\n  onClick,\n  label,\n  customIcon,\n  icon,\n  iconClassName,\n  className,\n  isDisabled,\n  isActive,\n}) => {\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        className={buildClassName(className, styles.button, isActive && styles.active)}\n        onClick={onClick}\n        disabled={isDisabled}\n      >\n        {customIcon || <i className={buildClassName(iconClassName, 'icon', `icon-${icon}`)} />}\n      </Button>\n      <div className={styles.buttonText}>{label}</div>\n    </div>\n  );\n};\n\nexport default memo(PhoneCallButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNYRVAUg\",\"blurred\":\"RBmbMiou\",\"single-column\":\"O7cZE08z\",\"singleColumn\":\"O7cZE08z\",\"header\":\"GI6dY5aJ\",\"close-button\":\"ULiJZuaP\",\"closeButton\":\"ULiJZuaP\",\"emojis-backdrop\":\"RFBKZpjx\",\"emojisBackdrop\":\"RFBKZpjx\",\"open\":\"zi1NlOXX\",\"emojis\":\"DFco1VIN\",\"emoji-tooltip\":\"MRIShZ3V\",\"emojiTooltip\":\"MRIShZ3V\",\"user-info\":\"eaUe2A0c\",\"userInfo\":\"eaUe2A0c\",\"buttons\":\"qIeflO02\",\"leave\":\"hclywYYk\",\"accept\":\"ln_ZBUHy\",\"accept-icon\":\"cVRd3twS\",\"acceptIcon\":\"cVRd3twS\",\"main-video\":\"bGlBFSJq\",\"mainVideo\":\"bGlBFSJq\",\"second-video\":\"TOFu1n5x\",\"secondVideo\":\"TOFu1n5x\",\"visible\":\"LOnSFN9w\",\"fullscreen\":\"Omg5T1o6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoneCall, ApiUser } from '../../../api/types';\n\nimport {\n  getStreams, IS_SCREENSHARE_SUPPORTED, switchCameraInputP2p, toggleStreamP2p,\n} from '../../../lib/secret-sauce';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPhoneCallUser } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport PhoneCallButton from './PhoneCallButton';\n\nimport styles from './PhoneCall.module.scss';\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCall?: ApiPhoneCall;\n  isOutgoing: boolean;\n  isCallPanelVisible?: boolean;\n};\n\nconst PhoneCall: FC<StateProps> = ({\n  user,\n  isOutgoing,\n  phoneCall,\n  isCallPanelVisible,\n}) => {\n  const lang = useOldLang();\n  const {\n    hangUp, requestMasterAndAcceptCall, playGroupCallSound, toggleGroupCallPanel, connectToActivePhoneCall,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  const isDiscarded = phoneCall?.state === 'discarded';\n  const isBusy = phoneCall?.reason === 'busy';\n\n  const isIncomingRequested = phoneCall?.state === 'requested' && !isOutgoing;\n  const isOutgoingRequested = (phoneCall?.state === 'requested' || phoneCall?.state === 'waiting') && isOutgoing;\n  const isActive = phoneCall?.state === 'active';\n  const isConnected = phoneCall?.isConnected;\n\n  const [isHangingUp, startHangingUp, stopHangingUp] = useFlag();\n  const handleHangUp = useCallback(() => {\n    startHangingUp();\n    hangUp();\n  }, [hangUp, startHangingUp]);\n\n  useEffect(() => {\n    if (isHangingUp) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isIncomingRequested) {\n      playGroupCallSound({ sound: 'incoming' });\n    } else if (isBusy) {\n      playGroupCallSound({ sound: 'busy' });\n    } else if (isDiscarded) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isOutgoingRequested) {\n      playGroupCallSound({ sound: 'ringing' });\n    } else if (isConnected) {\n      playGroupCallSound({ sound: 'connect' });\n    }\n  }, [isBusy, isDiscarded, isIncomingRequested, isOutgoingRequested, isConnected, playGroupCallSound, isHangingUp]);\n\n  useEffect(() => {\n    if (phoneCall?.id) {\n      stopHangingUp();\n    } else {\n      connectToActivePhoneCall();\n    }\n  }, [connectToActivePhoneCall, phoneCall?.id, stopHangingUp]);\n\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, isConnected ? 1000 : undefined);\n\n  const callStatus = useMemo(() => {\n    const state = phoneCall?.state;\n    if (isHangingUp) {\n      return lang('lng_call_status_hanging');\n    }\n    if (isBusy) return 'busy';\n    if (state === 'requesting') {\n      return lang('lng_call_status_requesting');\n    } else if (state === 'requested') {\n      return isOutgoing ? lang('lng_call_status_ringing') : lang('lng_call_status_incoming');\n    } else if (state === 'waiting') {\n      return lang('lng_call_status_waiting');\n    } else if (state === 'active' && isConnected) {\n      return undefined;\n    } else {\n      return lang('lng_call_status_exchanging');\n    }\n  }, [isBusy, isConnected, isHangingUp, isOutgoing, lang, phoneCall?.state]);\n\n  const hasVideo = phoneCall?.videoState === 'active';\n  const hasPresentation = phoneCall?.screencastState === 'active';\n\n  const streams = getStreams();\n  const hasOwnAudio = streams?.ownAudio?.getTracks()[0].enabled;\n  const hasOwnPresentation = streams?.ownPresentation?.getTracks()[0].enabled;\n  const hasOwnVideo = streams?.ownVideo?.getTracks()[0].enabled;\n\n  const [isHidingPresentation, startHidingPresentation, stopHidingPresentation] = useFlag();\n  const [isHidingVideo, startHidingVideo, stopHidingVideo] = useFlag();\n\n  const handleTogglePresentation = useCallback(() => {\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('presentation');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleVideo = useCallback(() => {\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('video');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleAudio = useCallback(() => {\n    void toggleStreamP2p('audio');\n  }, []);\n\n  const [isEmojiOpen, openEmoji, closeEmoji] = useFlag();\n\n  const [isFlipping, startFlipping, stopFlipping] = useFlag();\n\n  const handleFlipCamera = useCallback(() => {\n    startFlipping();\n    switchCameraInputP2p();\n    setTimeout(stopFlipping, 250);\n  }, [startFlipping, stopFlipping]);\n\n  const timeElapsed = phoneCall?.startDate && (Number(new Date()) / 1000 - phoneCall.startDate);\n\n  useEffect(() => {\n    if (phoneCall?.state === 'discarded') {\n      setTimeout(hangUp, 250);\n    }\n  }, [hangUp, phoneCall?.reason, phoneCall?.state]);\n\n  return (\n    <Modal\n      isOpen={phoneCall && phoneCall?.state !== 'discarded' && !isCallPanelVisible}\n      onClose={handleClose}\n      className={buildClassName(\n        styles.root,\n        isMobile && styles.singleColumn,\n      )}\n      dialogRef={containerRef}\n    >\n      <Avatar\n        peer={user}\n        size=\"jumbo\"\n        className={hasVideo || hasPresentation ? styles.blurred : ''}\n      />\n      {phoneCall?.screencastState === 'active' && streams?.presentation\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.presentation} />}\n      {phoneCall?.videoState === 'active' && streams?.video\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.video} />}\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingPresentation && hasOwnPresentation && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownPresentation}\n      />\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingVideo && hasOwnVideo && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownVideo}\n      />\n      <div className={styles.header}>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <i className={buildClassName('icon', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          className={styles.closeButton}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n      <div\n        className={buildClassName(styles.emojisBackdrop, isEmojiOpen && styles.open)}\n        onClick={!isEmojiOpen ? openEmoji : closeEmoji}\n      >\n        <div className={buildClassName(styles.emojis, isEmojiOpen && styles.open)}>\n          {phoneCall?.isConnected && phoneCall?.emojis && renderText(phoneCall.emojis, ['emoji'])}\n        </div>\n        <div className={buildClassName(styles.emojiTooltip, isEmojiOpen && styles.open)}>\n          {lang('CallEmojiKeyTooltip', user?.firstName).replace('%%', '%')}\n        </div>\n      </div>\n      <div className={styles.userInfo}>\n        <h1>{user?.firstName}</h1>\n        <span className={styles.status}>{callStatus || formatMediaDuration(timeElapsed || 0)}</span>\n      </div>\n      <div className={styles.buttons}>\n        <PhoneCallButton\n          onClick={handleToggleAudio}\n          icon=\"microphone\"\n          isDisabled={!isActive}\n          isActive={hasOwnAudio}\n          label={lang(hasOwnAudio ? 'lng_call_mute_audio' : 'lng_call_unmute_audio')}\n        />\n        <PhoneCallButton\n          onClick={handleToggleVideo}\n          icon=\"video\"\n          isDisabled={!isActive}\n          isActive={hasOwnVideo}\n          label={lang(hasOwnVideo ? 'lng_call_stop_video' : 'lng_call_start_video')}\n        />\n        {hasOwnVideo && (IS_ANDROID || IS_IOS) && (\n          <PhoneCallButton\n            onClick={handleFlipCamera}\n            customIcon={(\n              <AnimatedIcon\n                tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                playSegment={!isFlipping ? [0, 1] : [0, 10]}\n                size={32}\n              />\n            )}\n            isDisabled={!isActive}\n            label={lang('VoipFlip')}\n          />\n        )}\n        {IS_SCREENSHARE_SUPPORTED && (\n          <PhoneCallButton\n            onClick={handleTogglePresentation}\n            icon=\"share-screen\"\n            isDisabled={!isActive}\n            isActive={hasOwnPresentation}\n            label={lang('lng_call_screencast')}\n          />\n        )}\n        {isIncomingRequested && (\n          <PhoneCallButton\n            onClick={requestMasterAndAcceptCall}\n            icon=\"phone-discard\"\n            isDisabled={isDiscarded}\n            label={lang('lng_call_accept')}\n            className={styles.accept}\n            iconClassName={styles.acceptIcon}\n          />\n        )}\n        <PhoneCallButton\n          onClick={handleHangUp}\n          icon=\"phone-discard\"\n          isDisabled={isDiscarded}\n          label={lang(isIncomingRequested ? 'lng_call_decline' : 'lng_call_end_call')}\n          className={styles.leave}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { phoneCall, currentUserId } = global;\n    const { isCallPanelVisible, isMasterTab } = selectTabState(global);\n    const user = selectPhoneCallUser(global);\n\n    return {\n      isCallPanelVisible: Boolean(isCallPanelVisible),\n      user,\n      isOutgoing: phoneCall?.adminId === currentUserId,\n      phoneCall: isMasterTab ? phoneCall : undefined,\n    };\n  },\n)(PhoneCall));\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"P7EfDKJN\",\"star\":\"t8LJLFSN\",\"isFilled\":\"_XX6q8YW\",\"comment\":\"EvL0WaKD\",\"visible\":\"v5hn1XvT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './RatePhoneCallModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\nconst RatePhoneCallModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const { closeCallRatingModal, setCallRating } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const lang = useOldLang();\n  const [rating, setRating] = useState<number | undefined>();\n\n  const handleSend = useCallback(() => {\n    if (!rating) {\n      closeCallRatingModal();\n      return;\n    }\n    setCallRating({\n      rating: rating + 1,\n      comment: inputRef.current?.value || '',\n    });\n  }, [closeCallRatingModal, rating, setCallRating]);\n\n  function handleClickStar(index: number) {\n    return () => setRating(rating === index ? undefined : index);\n  }\n\n  const handleCancelClick = useCallback(() => {\n    closeCallRatingModal();\n  }, [closeCallRatingModal]);\n\n  return (\n    <Modal title={lang('lng_call_rate_label')} className=\"narrow\" onClose={closeCallRatingModal} isOpen={isOpen}>\n      <div className={styles.stars}>\n        {new Array(5).fill(undefined).map((_, i) => {\n          const isFilled = rating !== undefined && rating >= i;\n          return (\n            <i\n              className={buildClassName(\n                'icon',\n                isFilled ? 'icon-favorite-filled' : 'icon-favorite',\n                isFilled && styles.isFilled,\n                styles.star,\n              )}\n              onClick={handleClickStar(i)}\n            />\n          );\n        })}\n      </div>\n      <InputText\n        ref={inputRef}\n        placeholder={lang('lng_call_rate_comment')}\n        className={buildClassName(styles.comment, rating !== 4 && rating !== undefined && styles.visible)}\n      />\n\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleSend}>\n          {lang('Send')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={handleCancelClick}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(RatePhoneCallModal);\n","import { initializeSoundsForSafari } from '../global/actions/ui/calls';\nimport { IS_IOS, IS_SAFARI } from '../util/windowEnvironment';\n\nexport { default as GroupCall } from '../components/calls/group/GroupCall';\nexport { default as ActiveCallHeader } from '../components/calls/ActiveCallHeader';\nexport { default as PhoneCall } from '../components/calls/phone/PhoneCall';\nexport { default as RatePhoneCallModal } from '../components/calls/phone/RatePhoneCallModal';\n\nif (IS_SAFARI || IS_IOS) {\n  document.addEventListener('click', initializeSoundsForSafari, { once: true });\n}\n"],"names":["toTelegramSource","source","fromTelegramSource","getAmplitude","array","scale","arguments","length","undefined","total","i","rms","Math","sqrt","min","p2pPayloadTypeToConference","p","id","name","feedbackTypes","clockrate","parameters","channels","THRESHOLD","IS_SCREENSHARE_SUPPORTED","navigator","mediaDevices","IS_ECHO_CANCELLATION_SUPPORTED","getSupportedConstraints","echoCancellation","IS_NOISE_SUPPRESSION_SUPPORTED","noiseSuppression","sessionDescription","isP2p","sdp","Error","sections","split","map","s","reduce","acc","el","match","hasOwnProperty","filter","Boolean","lookup","prefix","sectionName","find","line","startsWith","substr","Object","values","section","parseExtmaps","l","uri","Number","parsePayloadTypes","payloads","data","fbParams","type","subtype","d","q","value","some","z","payload","assign","f","keys","rawSource","sourceAudio","rawSourceVideo","rawSourceScreencast","hash","fingerprint","setup","console","log","ufrag","pwd","fingerprints","ssrc","semantics","sources","slice","audioExtmap","videoExtmap","screencastExtmap","audioPayloadTypes","videoPayloadTypes","screencastPayloadTypes","conference","isAnswer","isPresentation","lines","add","push","sessionId","ssrcs","audioExtensions","videoExtensions","transport","candidates","mid","join","addCandidate","c","sdpString","str","foundation","component","protocol","priority","ip","port","generation","addTransport","forEach","addPayloadType","payloadType","parametersString","key","fbParam","addSsrcEntry","entry","payloadTypes","isVideo","isMain","_ref","isRemoved","sourceGroups","sourceGroup","ssrcTelegram","endpoint","silence","ctx","oscillator","createOscillator","dst","connect","createMediaStreamDestination","start","MediaStream","stream","getAudioTracks","enabled","black","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","state","leavePresentation","isFromToggle","screenshareDataChannel","close","screenshareConnection","onUpdate","getUserStreams","userId","streams","setVolume","volume","participantFunctions","isStreamEnabled","streamType","myId","getTracks","updateGroupCallStreams","hasAudioStream","hasVideoStream","hasPresentationStream","amplitude","speaking","async","getUserStream","facing","audioStream","getDisplayMedia","audio","video","media","getUserMedia","facingMode","vid","srcObject","deferred","Deferred","oncanplay","resolve","promise","toggleStream","connection","track","sender","getSenders","newStream","replaceTrack","audioContext","audioSource","createMediaStreamSource","analyser","audioAnalyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","getCurrentAmplitude","Uint8Array","frequencyBinCount","getByteFrequencyData","stop","disconnect","e","updateConnectionState","connectionState","leaveGroupCall","dataChannel","analyserInterval","clearInterval","analyzeAmplitudes","prevAmplitude","handleUpdateGroupCallParticipants","updatedParticipants","participants","participant","isSelf","newEndpoints","isMuted","canSelfUnmute","isLeft","isAudioLeft","isMutedByMe","isVideoLeft","isVideoJoined","isPresentationLeft","presentation","hasVideo","hasAudio","hasPresentation","lastMid","toString","updatingParticipantsQueue","buildSdp","setRemoteDescription","answer","createAnswer","setLocalDescription","newConference","answerNew","error","handleTrack","audioElement","mediaStream","kind","onended","window","AudioContext","gainNode","createGain","gain","muteNode","destination","addTrack","test","Audio","muted","remove","toggleMute","initializeConnection","RTCPeerConnection","createDataChannel","onopen","onmessage","JSON","parse","colibriClass","onerror","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","ontrack","onnegotiationneeded","offer","createOffer","offerToReceiveVideo","offerToReceiveAudio","parseSdp","audioSsrc","videoSsrc","screenshareConference","videoStream","updateStreams","mediaState","toggleStreamP2p","ownAudio","ownVideo","ownPresentation","blackVideo","blackPresentation","sendMediaState","err","stopPhoneCall","emitSignalingData","videoRotation","isBatteryLow","videoState","screencastState","filterVP8","mediaContent","isOutgoing","idx","findIndex","vp8PayloadType","rtxIdx","apt","sendInitialSetup","ssrcGroups","rtpExtensions","screencast","processSignalingMessage","message","pendingCandidates","gotInitialSetup","candidate","commitPendingIceCandidates","xmlns","Date","now","localDescription","Promise","all","addIceCandidate","sdpMLineIndex","tryAddCandidate","conn","params","addActionHandler","global","actions","isFromLibrary","shouldDiscard","shouldRemove","rejoin","isPageUnload","tabId","getCurrentTabId","groupCall","selectActiveGroupCall","updateActiveGroupCall","participantsCount","groupCalls","activeGroupCallId","setGlobal","callApi","call","getGlobal","removeGroupCall","removeGroupCallAudioElement","toggleGroupCallPanel","force","afterHangUp","requestMasterAndJoinGroupCall","user","selectUser","currentUserId","videoStopped","raiseHand","participantId","floor","GROUP_CALL_VOLUME_MULTIPLIER","startSharingScreen","presentationPaused","showNotification","getGroupCallAudioElement","getGroupCallAudioContext","safePlay","setInterval","joinGroupCall","apiUpdate","result","inviteHash","loadMoreGroupCallParticipants","chatId","chat","selectChat","loadFullChat","phoneCall","selectPhoneCallUser","dhConfig","gAHash","addUsers","buildCollectionByKey","users","hangUp","gB","stringify","encodedData","updateTabState","ratingPhoneCall","rating","comment","selectTabState","setTimeout","EMOJI_DATA","Uint16Array","EMOJI_OFFSETS","update","toggleGroupCallPresentation","selectGroupCallParticipant","updateGroupCallParticipant","omit","updateGroupCall","isSpeakerDisabled","groupCallId","handleUpdateGroupCallConnection","ARE_CALLS_SUPPORTED","adminId","isBusy","accessHash","connections","libraryVersions","version","langProvider","firstName","needRating","isCallPanelVisible","gA","keyFingerprint","emojis","newCall","gAOrB","shouldStartVideo","iceServers","urls","isTurn","isStun","username","credentialType","credential","password","iceTransportPolicy","bundlePolicy","iceCandidatePoolSize","onicecandidate","play","catch","transceiver","iceRestart","slnc","screenshare","dc","negotiated","joinPhoneCall","sendSignalingData","isP2pAllowed","isConnected","then","formatGroupCallVolume","GROUP_CALL_DEFAULT_VOLUME","SPEAKER_ICON_DISABLED_SEGMENT","SPEAKER_ICON_ENABLED_SEGMENT","memo","withGlobal","isAdmin","selectIsAdminInActiveGroupCall","onCloseAnimationEnd","onClose","isDropdownOpen","menuRef","menuPositionOptions","toggleGroupCallMute","setGroupCallParticipantVolume","openChat","requestToSpeak","getActions","lang","useOldLang","isDeleteUserModalOpen","openDeleteUserModal","closeDeleteUserModal","useFlag","isRaiseHand","raiseHandRating","shouldRaiseHand","localVolume","setLocalVolume","useState","shouldPlay","setShouldPlay","isLocalVolumeZero","speakerIconPlaySegment","useEffect","handleSetLocalVolume","useLastCallback","runThrottled","ms","noFirst","deps","useThrottledCallback","cb","useRunThrottled","handleRemove","stopPropagation","handleCancelRequestToSpeak","handleMute","handleOpenProfile","React","Menu","_extends","isOpen","ref","withPortal","className","buildClassName","max","onChange","target","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Speaker","playSegment","size","MenuItem","icon","onClick","destructive","DeleteMemberModal","noColor","isSpeaking","prevIsRaiseHand","usePreviousDeprecated","prevIsMuted","useMemo","microphoneColor","VoiceOutlined","color","forceAlways","nonInteractive","_ref2","peer","useRef","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleBeforeContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","useCallback","current","getRootElement","closest","getMenuElement","getLayout","hasCustomVolume","aboutText","aboutColor","styles","subtitleRed","subtitleBlue","replace","subtitleGreen","about","ListItem","leftElement","Avatar","avatar","rightElement","OutlinedMicrophoneIcon","root","onMouseDown","onContextMenu","multiline","ripple","FullNameTitle","withEmojiStatus","title","subtitle","subtitleText","renderText","GroupCallParticipantMenu","anchor","compareParticipants","a","b","compareFields","panelOffset","isLandscape","orderedParticipantIds","sort","handleLoadMoreGroupCallParticipants","viewportIds","getMore","useInfiniteScroll","InfiniteScroll","items","onLoadMore","style","GroupCallParticipant","teactOrderKey","indexOf","isUser","layout","pinnedVideo","setPinned","canPin","thumbnailRef","videoRef","videoFallbackRef","x","noAnimate","isPinned","shouldFlipVideo","status","prevLayoutRef","prevX","y","prevY","prevWidth","prevHeight","currentX","currentY","currentWidth","currentHeight","isHidden","setIsHidden","actualStream","streamRef","active","handleInactive","addEventListener","removeEventListener","isLoading","setIsLoading","handleCanPlay","useInterval","requestMutation","videoWidth","videoHeight","drawImage","thumbnail","alpha","isDrawing","animate","draw","IS_CANVAS_FILTER_SUPPORTED","fastBlur","fastRaf","handleClickPin","onDoubleClick","Skeleton","autoPlay","playsInline","onCanPlay","Button","round","ariaLabel","vibrateShort","vibrate","meParticipant","hasRequestedToSpeak","noAudioStream","playGroupCallSound","muteMouseDownState","isRequestingToSpeak","setIsRequestingToSpeak","isConnecting","prevShouldRaiseHand","sound","r","random","animatedIconName","handleMouseDownMute","handleMouseUpMute","onMouseUp","disabled","Spinner","_ref5","selectGroupCall","canInvite","selectCanInviteToActiveGroupCall","toggleGroupCallVideo","connectToActiveGroupCall","createGroupCallInviteLink","containerRef","primaryVideoContainerRef","secondaryVideoContainerRef","panelScrollTriggerRef","panelRef","isLeaving","setIsLeaving","observe","useIntersectionObserver","rootRef","throttleMs","isDisabled","hasScrolled","useIsIntersecting","isMobile","useAppLayout","isFullscreen","openFullscreen","closeFullscreen","isSidebarOpen","openSidebar","closeSidebar","isLandscapeLayout","isAppFullscreen","useFullscreenStatus","firstPresentation","videoParticipants","_ref3","flatMap","_ref4","compact","hasVideoParticipants","groupCallTitle","membersString","isConfirmLeaveModalOpen","openConfirmLeaveModal","closeConfirmLeaveModal","isEndGroupCallModal","setIsEndGroupCallModal","shouldEndGroupCall","setShouldEndGroupCall","canRequestToSpeak","handleCloseConfirmLeaveModal","handleToggleFullscreen","handleToggleSidebar","handleToggleGroupCallPanel","handleInviteMember","handleClickVideo","handleLeaveGroupCall","handleCloseAnimationEnd","handleToggleGroupCallPresentation","canPinVideo","isLandscapeWithVideos","setPinnedVideo","videoLayout","primaryContainerRef","secondaryContainerRef","setVideoLayout","setPanelOffset","videosCount","prevVideosCount","prevVideoParticipants","removedVideoParticipants","recalculateLayout","primaryContainer","secondaryContainer","removed","secondaryInitialX","secondaryInitialY","secondaryContainerWidth","getBoundingClientRect","isRemounted","pinnedPush","skip","pinnedSkipIndex","initialX","initialY","containerWidth","containerHeight","orderKey","videoType","secondaryVideosCounts","isFirstBig","columns","rows","ceil","smallWidth","heightTotal","isBig","realIndex","PREFERRED_PANEL_VIDEO_HEIGHT","shouldRemount","splice","calculateColumnsCount","shouldFillLastRow","lastRowWidth","row","useResizeObserver","useGroupCallVideoLayout","handleSetPinnedVideo","handleOpenFirstPresentation","Modal","fullscreen","appFullscreen","landscape","noVideoParticipants","portrait","noSidebar","dialogRef","videos","videosHeader","headerButton","firstButton","bigger","videosHeaderLastButton","videosContent","panelWrapper","panel","panelScrollTrigger","panelHeader","scrolled","panelHeaderText","lastButton","participantVideos","GroupCallParticipantVideo","GroupCallParticipantList","FloatingActionButton","isShown","addParticipantButton","mainVideoContainer","actionButton","MicrophoneButton","Checkbox","label","checked","onCheck","isText","tabState","isMasterTab","phoneCallUser","body","classList","toggle","electron","setTrafficLightPosition","customIcon","iconClassName","isActive","requestMasterAndAcceptCall","connectToActivePhoneCall","toggleFullscreen","exitFullscreen","requestFullscreen","IS_REQUEST_FULLSCREEN_SUPPORTED","container","handleClose","isDiscarded","reason","isIncomingRequested","isOutgoingRequested","isHangingUp","startHangingUp","stopHangingUp","handleHangUp","forceUpdate","useForceUpdate","callStatus","hasOwnAudio","hasOwnPresentation","hasOwnVideo","isHidingPresentation","startHidingPresentation","stopHidingPresentation","isHidingVideo","startHidingVideo","stopHidingVideo","handleTogglePresentation","handleToggleVideo","handleToggleAudio","isEmojiOpen","openEmoji","closeEmoji","isFlipping","startFlipping","stopFlipping","handleFlipCamera","switchCameraInputP2p","timeElapsed","startDate","singleColumn","blurred","mainVideo","secondVideo","visible","header","closeButton","emojisBackdrop","open","emojiTooltip","userInfo","formatMediaDuration","buttons","PhoneCallButton","IS_ANDROID","IS_IOS","CameraFlip","accept","acceptIcon","leave","closeCallRatingModal","setCallRating","inputRef","setRating","handleSend","handleCancelClick","Array","fill","_","isFilled","index","InputText","placeholder","IS_SAFARI","initializeSoundsForSafari","once"],"sourceRoot":""}