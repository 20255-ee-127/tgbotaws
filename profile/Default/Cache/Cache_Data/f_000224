{"version":3,"file":"9451.082c24c693edcc6799a5.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.module.scss?67d9","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.module.scss?c1d3","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.module.scss?e51e","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx"],"sourcesContent":["import type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, standaloneMedia, mediaIndex,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.avatarOwner.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, mediaIndex } = item;\n    const avatarPhoto = avatarOwner.profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.avatarOwner.profilePhotos!.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = avatarOwner?.profilePhotos?.photos[item!.mediaIndex!];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const textMessage = item.type === 'message' ? item.message : undefined;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: textMessage && selectIsMessageProtected(global, textMessage),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatar = avatarOwner?.profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === avatarOwner?.profilePhotos?.fallbackPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = avatarOwner?.profilePhotos?.count\n      && (avatarOwner.profilePhotos.count + (avatarOwner?.profilePhotos?.fallbackPhoto ? 1 : 0));\n    const countText = count && lang('Of', [item.mediaIndex! + 1, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText) parts.push(countText);\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  chatMessages?: Record<number, ApiMessage>;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  chatMessages,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, mediaIndex,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.avatarOwner.profilePhotos!.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromAvatarOwner.profilePhotos && nextIndex < fromAvatarOwner.profilePhotos.photos.length) {\n        return { type: 'avatar', avatarOwner: fromAvatarOwner, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = avatarOwner?.profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = peer?.profilePhotos;\n\n      return {\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectChat, selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopics = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectChat(global, forumId)?.topics;\n  });\n\n  const forumTopics = useSelector(selectTopics);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopics) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopics\n      ? Object.values(forumTopics).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic.id, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopics;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopics]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = modal || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(modal!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (modal?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: modal.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, modal?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePreviousDeprecated(mainButton?.color, true);\n  const prevMainButtonTextColor = usePreviousDeprecated(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePreviousDeprecated(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePreviousDeprecated(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId } = modal || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"GB3KpHga\",\"root\":\"bv742cLK\",\"transition\":\"M6awemqC\",\"content\":\"ahnxTv9t\",\"main\":\"DC9KsF8l\",\"giftSection\":\"OK5knwl3\",\"section\":\"U4wtCtMj\",\"header\":\"BFRxuPRK\",\"starHeaderText\":\"pOrYpnEf\",\"hiddenHeader\":\"x0wO46Uz\",\"closeButton\":\"lF9a9DcG\",\"avatars\":\"yUYDzqjs\",\"center\":\"ikfz9iTG\",\"description\":\"zoIZUqey\",\"premiumFeatures\":\"LzTgfZVa\",\"boostIcon\":\"jrg2ik9Z\",\"optionBottom\":\"s0ze_M5B\",\"secondaryInfo\":\"ML7Glpia\",\"footer\":\"MQ2XTHHM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumGiftModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst PremiumGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closePremiumGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return oldLang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(oldLang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = oldLang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(oldLang('GiftPremiumWillReceiveBoostsPlural',\n      selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closePremiumGiftModal}\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.giftSection}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <div className={styles.footer}>\n          <Button withPremiumGradient isShiny disabled={!selectedGift} onClick={handleSubmit}>\n            {oldLang(\n              'GiftSubscriptionFor', selectedGift\n              && formatCurrency(selectedGift!.amount, selectedGift.currency, oldLang.code),\n            )}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(PremiumGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[];\n  starsNeeded?: number;\n  onClick: (option: ApiStarTopupOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  options,\n  starsNeeded,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) {\n      return [undefined, false];\n    }\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={styles.options}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        return (\n          <div\n            className={buildClassName(styles.option, (!isOdd && isWide) && styles.wideOption)}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, lang.code)}\n            </div>\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {lang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"uH8fqafl\",\"root\":\"aj6xpTC3\",\"transition\":\"_aQt3_Do\",\"main\":\"Iqf5K4mR\",\"headerInfo\":\"IOY_ESbV\",\"logo\":\"Pl_aaBw0\",\"logoBackground\":\"D5l7UeFq\",\"description\":\"ecZztcn2\",\"section\":\"t18TOwVL\",\"header\":\"eRV8zao3\",\"starHeaderText\":\"TTmBv6nH\",\"hiddenHeader\":\"keGf2mX9\",\"closeButton\":\"tlkzyZXX\",\"avatar\":\"P0oMhbon\",\"center\":\"Ri1FZd1z\",\"secondaryInfo\":\"TWNeq00k\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../api/types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport {\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  starsGiftOptions?: ApiStarTopupOption[] | undefined;\n  forUserId?: string;\n  user?: ApiUser;\n};\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  starsGiftOptions,\n  forUserId,\n  user,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: forUserId!,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        options={starsGiftOptions}\n        onClick={handleClick}\n      />\n    );\n  }\n\n  const bottomText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closeStarsGiftModal}\n      isOpen={isOpen}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size=\"huge\"\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getSenderTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          {renderStarOptionList()}\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starsGiftOptions, forUserId, isCompleted,\n  } = selectTabState(global).starsGiftModal || {};\n\n  const user = forUserId ? selectUser(getGlobal(), forUserId) : undefined;\n\n  return {\n    isCompleted,\n    starsGiftOptions,\n    forUserId,\n    user,\n  };\n})(StarsGiftModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasOnClickHandler = Boolean(onConfirm || modalProps.onClose);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasOnClickHandler && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'random_users' | 'specific_users';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry, ApiPremiumGiftCodeOption, ApiPrepaidGiveaway, ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiveawayUsersRound from '../../../assets/premium/GiveawayUsersRound.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiPrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n};\n\ntype GiveawayAction = 'createRandomlyUsers' | 'createSpecificUsers';\ntype ApiGiveawayType = 'random_users' | 'specific_users';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'BoostingCreateGiveaway',\n    text: 'BoostingWinnersRandomly',\n    value: 'random_users',\n    img: GiftBlueRound,\n    actions: 'createRandomlyUsers',\n    isLink: false,\n  }, {\n    name: 'BoostingAwardSpecificUsers',\n    text: 'BoostingSelectRecipients',\n    value: 'specific_users',\n    img: GiveawayUsersRound,\n    actions: 'createSpecificUsers',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n\n  const isRandomUsers = selectedGiveawayOption === 'random_users';\n  const selectedUserCount = isRandomUsers ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n\n  const selectedGift = useMemo(() => {\n    return gifts!.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    const uniqueUserCounts = new Set(gifts?.map((gift) => gift.users));\n    return Array.from(uniqueUserCounts).sort((a, b) => a - b);\n  }, [gifts]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedMonthOption(prepaidGiveaway ? prepaidGiveaway.months : gifts?.[0].months);\n    }\n  }, [gifts, isOpen, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (prepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isRandomUsers) {\n      openInvoice({\n        type: 'giveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    } else {\n      openInvoice({\n        type: 'giftcode',\n        boostChannelId: chatId!,\n        userIds: selectedUserIds,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    }\n\n    closeGiveawayModal();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    launchPrepaidGiveaway({\n      chatId: chatId!,\n      giveawayId: dataPrepaidGiveaway!.id,\n      paymentPurpose: {\n        additionalChannelIds: selectedChannelIds,\n        countries: selectedCountryIds,\n        prizeDescription,\n        areWinnersVisible: shouldShowWinners,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n      },\n    });\n\n    closeConfirmModal();\n    closeGiveawayModal();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('random_users');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiveawayModal();\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  if (!gifts) return undefined;\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {dataPrepaidGiveaway ? (\n          <div className={styles.status}>\n            <div>\n              <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway.months]} alt=\"\" />\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway.quantity)}\n              </h3>\n              <p className={styles.month}>{lang('PrepaidGiveawayMonths', dataPrepaidGiveaway.months)}</p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataPrepaidGiveaway.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isRandomUsers && (\n          <>\n            {!dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingChannelsIncludedGiveaway')}\n              </h2>\n\n              <ListItem\n                inactive\n                className=\"chat-item-clickable contact-list-item\"\n              >\n                <GroupChatInfo\n                  chatId={chatId!}\n                  status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                    : 'BoostingGroupWillReceiveBoost', boostQuantity, 'i')}\n                />\n              </ListItem>\n\n              {selectedChannelIds?.map((channelId) => {\n                return (\n                  <ListItem\n                    ripple\n                    key={channelId}\n                    className=\"chat-item-clickable contact-list-item\"\n                    /* eslint-disable-next-line react/jsx-no-bind */\n                    onClick={() => deleteParticipantsHandler(channelId)}\n                    rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n                  >\n                    <GroupChatInfo\n                      chatId={channelId.toString()}\n                    />\n                  </ListItem>\n                );\n              })}\n\n              {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n                <ListItem\n                  icon=\"add\"\n                  ripple\n                  onClick={openChannelPickerModal}\n                  className={styles.addButton}\n                  iconClassName={styles.addChannel}\n                >\n                  {lang('BoostingAddChannelOrGroup')}\n                </ListItem>\n              )}\n            </div>\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingEligibleUsers')}\n              </h2>\n\n              {renderSubscribersOptions()}\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n            </div>\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayAdditionalPrizes')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowPrizes}\n                  onChange={handleShouldShowPrizesChange}\n                />\n              </div>\n\n              {shouldShowPrizes && (\n                <div className={styles.prizesSection}>\n                  <h2 className={styles.title}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : selectedUserCount}\n                  </h2>\n                  <InputText\n                    className={styles.prizesInput}\n                    value={prizeDescription}\n                    onChange={handlePrizeDescriptionChange}\n                    label={lang('BoostingGiveawayEnterYourPrize')}\n                  />\n                </div>\n              )}\n            </div>\n\n            {shouldShowPrizes ? (\n              <div className={styles.subscription}>\n                {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                    : [selectedUserCount, prizeDescription, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                    : [selectedUserCount, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown'])}\n              </div>\n            ) : (\n              <div className={styles.subscription}>\n                {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n              </div>\n            )}\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayShowWinners')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowWinners}\n                  onChange={handleShouldShowWinnersChange}\n                />\n              </div>\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n            </div>\n\n            <div className={buildClassName(styles.section, dataPrepaidGiveaway && styles.subscriptionFooter)}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDateWhenGiveawayEnds')}\n              </h2>\n\n              <Button\n                ariaLabel={lang('BoostGift.DateEnds')}\n                className={buildClassName(styles.dateButton, 'expire-limit')}\n                isText\n                onClick={openCalendar}\n              >\n                <h3 className={styles.title}>\n                  {lang('BoostGift.DateEnds')}\n                </h3>\n                {formatDateTimeToString(customExpireDate, lang.code)}\n              </Button>\n            </div>\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button className={styles.button} onClick={dataPrepaidGiveaway ? openConfirmModal : handleClick}>\n              {lang('BoostingStartGiveaway')}\n              <div className={styles.quantity}>\n                <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeButtonColor)}>\n                  <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                  <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : boostQuantity}\n                  </div>\n                </div>\n              </div>\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './PremiumGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openPremiumGiftModal, showNotification } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openPremiumGiftModal({ forUserIds: selectedUserIds });\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: oldLang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      title={oldLang('GiftTelegramPremiumTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onConfirm={handleSendIdList}\n      onEnter={handleSendIdList}\n      withPremiumGradient\n      isConfirmDisabled={!selectedUserIds?.length}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        selectedIds={selectedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdsChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yZCdNeOD\",\"main\":\"Nw_QD6HK\",\"filter\":\"Rn1VBujL\",\"title\":\"bawi8zUd\",\"buttons\":\"LWBSQW38\",\"picker\":\"xwRoLV_t\",\"avatars\":\"sRzPGePZ\",\"center\":\"hM3XfhyZ\",\"description\":\"utdqQEVD\",\"premiumFeatures\":\"ecueYpiv\",\"options\":\"krNSp7Q1\",\"button\":\"Phaog4hK\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterUsersByName, isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = [\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ];\n\n    const filteredContactIds = filterUsersByName(combinedIds, usersById, searchQuery);\n\n    return sortChatIds(unique(filteredContactIds).filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"section\":\"I0BEPBF0\",\"logo\":\"jbiW0GE8\",\"logoBackground\":\"upEQnNLY\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  logoBackground?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  isGift?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  logoBackground,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  isGift,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!isGift && !noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <div className={styles.section}>\n            <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n            {Boolean(logoBackground)\n              && <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />}\n          </div>\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { getSenderTitle } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"star\":\"EFL6qa9z\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n  canBuyPremium?: boolean;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot, canBuyPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, openStarsGiftingModal, openStarsGiftModal,\n  } = getActions();\n\n  const { balance, history } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  const openStarsGiftingModalHandler = useLastCallback(() => {\n    openStarsGiftingModal({});\n  });\n\n  const openStarsInfoModalHandler = useLastCallback(() => {\n    openStarsGiftModal({});\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? oldLang('StarsNeededTitle', starsNeeded) : oldLang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? oldLang('StarsNeededText', originBotName) : oldLang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          {canBuyPremium && (\n            <Button\n              className={styles.starButton}\n              onClick={openStarsInfoModalHandler}\n            >\n              {oldLang('Star.List.BuyMoreStars')}\n            </Button>\n          )}\n          {canBuyPremium && (\n            <Button\n              className={buildClassName(styles.starButton, 'settings-main-menu-star')}\n              color=\"translucent\"\n              onClick={openStarsGiftingModalHandler}\n            >\n              <StarIcon className=\"icon\" type=\"gold\" size=\"big\" />\n              {oldLang('TelegramStarsGift')}\n            </Button>\n          )}\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              big\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"starsHeader\":\"VqKkGnpy\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"mediaShift\":\"owKhvwqB\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"starTitle\":\"KIlRQemn\",\"subtitle\":\"mFYcIYMJ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessageLink, getUserFullName } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectPeer, selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  user?: ApiUser;\n  canPlayAnimatedEmojis?: boolean;\n  starGiftSticker?: ApiSticker;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal, peer, user, canPlayAnimatedEmojis, starGiftSticker,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { transaction } = modal || {};\n  const isGift = transaction?.isGift;\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const animatedStickerData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    return (\n      <AnimatedIconFromSticker\n        key={transaction.id}\n        sticker={starGiftSticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n      />\n    );\n  }, [canPlayAnimatedEmojis, starGiftSticker, transaction]);\n\n  const giftEntryAboutText = useMemo(() => {\n    const subtitleText = oldLang('lng_credits_box_history_entry_gift_in_about');\n    const subtitleTextParts = subtitleText.split('{link}');\n\n    return (\n      <>\n        {subtitleTextParts[0]}\n        <SafeLink\n          url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n          text={oldLang('GiftStarsSubtitleLinkName')}\n        >\n          {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n        </SafeLink>\n        {subtitleTextParts[1]}\n      </>\n    );\n  }, [oldLang]);\n\n  const giftOutAboutText = useMemo(() => {\n    return lang(\n      'CreditsBoxHistoryEntryGiftOutAbout',\n      {\n        user: <strong>{user ? getUserFullName(user) : ''}</strong>,\n        link: (\n          <SafeLink\n            url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n            text={oldLang('GiftStarsSubtitleLinkName')}\n          >\n            {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, user, oldLang]);\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n        && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = transaction.title || (customPeer ? oldLang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && transaction.messageId\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={buildClassName(styles.header, styles.starsHeader)}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {isGift ? animatedStickerData : (\n          <img\n            className={buildClassName(styles.starsBackground, media && styles.mediaShift)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {title && <h1 className={styles.title}>{title}</h1>}\n        {isGift && (\n          <h1 className={buildClassName(styles.title, styles.starTitle)}>\n            {transaction?.isMyGift ? oldLang('StarsGiftSent') : oldLang('StarsGiftReceived')}\n          </h1>\n        )}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, transaction.stars < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(transaction.stars)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n        {isGift && (\n          <span className={styles.subtitle}>\n            {transaction?.isMyGift ? giftOutAboutText : giftEntryAboutText}\n          </span>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(transaction.stars < 0 || transaction.isMyGift ? 'Stars.Transaction.To'\n        : peerId ? 'Star.Transaction.From' : 'Stars.Transaction.Via'),\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (transaction.id) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <span\n            className={styles.tid}\n            onClick={() => {\n              copyTextToClipboard(transaction.id!);\n              showNotification({\n                message: oldLang('StarsTransactionIDCopied'),\n              });\n            }}\n          >\n            {transaction.id}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !transaction.photo ? (peer || customPeer) : undefined,\n    };\n  }, [transaction, oldLang, peer, isGift, animatedStickerData, giftOutAboutText, giftEntryAboutText]);\n\n  const prevModalData = usePreviousDeprecated(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      isGift={isGift}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      noHeaderImage={Boolean(transaction?.extendedMedia)}\n      headerAvatarWebPhoto={transaction?.photo}\n      headerAvatarPeer={renderingModalData?.avatarPeer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const user = peerId ? selectUser(global, peerId) : undefined;\n\n    const starCount = modal?.transaction.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    return {\n      peer,\n      user,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      starGiftSticker,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GsS8Jrki\",\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isMonetizationSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isMonetizationSharing,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, minLevelToRestrictAds]);\n\n  if (isMonetizationSharing && modalData) {\n    return (\n      <TableAboutModal\n        isOpen={isOpen}\n        listItemData={modalData.listItemData}\n        headerIconName=\"channel\"\n        header={modalData.header}\n        footer={modalData.footer}\n        buttonText={oldLang('RevenueSharingAdsUnderstood')}\n        onClose={onClose}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList?.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isSynced?: boolean;\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isSynced,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (!isSynced) return;\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, [isSynced]);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={filteredFoundIds}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isSynced: global.isSynced,\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header settings-picker-title\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {oldLang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return lang('Loading');\n\n    const { visibility, shouldAllowPremium } = setting;\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAdsClick?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n  canReplyInChat,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAdsClick: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAdsClick,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransitionDeprecated(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAdsClick();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openPremiumGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (foundIds?.length) {\n      if (searchType === 'chat') {\n        const [chatId, messageId] = parseSearchResultKey(foundIds[0]);\n        focusMessage({ chatId, messageId, threadId });\n      }\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [searchType, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => performMiddleSearch({ chatId, threadId, query }));\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [focusedIndex + 1, totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n  message,\n  reactionsLimit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      return currentReactions.map(({ reaction }) => reaction);\n    }\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage,\n  type ApiMessageEntity,\n  type ApiReaction,\n  type ApiReactionCustomEmoji,\n  type ApiSticker,\n  type ApiStory,\n  type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n  && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiInvoice, ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","avatarOwner","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","date","formattedDate","formatMediaDateTime","count","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopics","topics","forumTopics","useSelector","topicIds","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","isLowStackPriority","shortName","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closePremiumGiftModal","oldLang","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","main","avatars","headerText","center","part","subpart","boostIcon","giftSection","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","stars","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","formatInteger","StarIcon","noForcedUpperCase","starsGiftOptions","forUserId","starsGiftModal","closeStarsGiftModal","selectedOption","setSelectedOption","bottomText","SafeLink","hiddenHeader","starHeaderText","headerInfo","logoBackground","StarsBackground","logo","StarLogo","formatCurrencyAsString","StarTopupOptionList","secondaryInfo","notFoundText","noScrollRestore","isViewOnly","itemClassName","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","ItemPicker","picker","confirmButtonText","shouldAdaptToSearch","withFixedHeight","modalProps","hasOnClickHandler","headerClassName","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiveawayUsersRound","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","isRandomUsers","selectedUserCount","boostQuantity","SUBSCRIBER_OPTIONS","monthQuantity","userCountOptions","uniqueUserCounts","quantity","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","boostChannelId","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openPremiumGiftModal","displayedUserIds","handleSendIdList","closeStarsGiftingModal","openStarsGiftModal","combinedIds","isSupport","SERVICE_NOTIFICATIONS_USER_ID","newSelectedId","onSelectedIdChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","menuRef","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","anchor","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","onButtonClick","withAvatar","hasAbsoluteCloseButton","webPhoto","table","row","cell","PickerSelectedItem","chatItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","openStarsTransactionModal","transactionPeer","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","openStarsGiftingModal","history","useLang","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","originBotName","shouldShowTransactions","all","transactions","tosText","openStarsGiftingModalHandler","openStarsInfoModalHandler","BalanceBlock","modalBalance","starButton","renderCount","shouldRestoreHeight","noFastList","TransactionItem","TabList","big","activeTab","tabs","onSwitchTab","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","botName","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","starCount","starGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","closeStarsTransactionModal","handleOpenMedia","flatMap","animatedStickerData","AnimatedIconFromSticker","giftEntryAboutText","subtitleTextParts","giftOutAboutText","withNodes","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","m","isMyGift","copyTextToClipboard","footerTextParts","renderingModalData","listItemData","headerIconName","isStatic","Separator","isMonetizationSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","TableAboutModal","blockchainText","monetizationTitle","specialReplacement","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","useSelectWithEnter","storyViewerOrigin","MuteChatModal","ChatFolderModal","popularBotApps","botApps","recentBotIds","topBotApps","searchPopularBotApps","openChatWithInfo","shouldShowMoreMine","setShouldShowMoreMine","filteredFoundIds","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","handleToggleShowMoreMine","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","useShowTransition","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","isCustomPeer","avatarIcon","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","update","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","preloadBackwards","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek"],"sourceRoot":""}