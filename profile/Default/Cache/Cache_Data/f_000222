{"version":3,"file":"4013.f2d5d394090accfd7925.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerSelectedItem.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: never;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const userProfilePhotos = user?.profilePhotos;\n  const chatProfilePhotos = chat?.profilePhotos;\n  const photos = userProfilePhotos?.photos || chatProfilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, userProfilePhotos?.count || 0, chatProfilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userProfilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userProfilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userProfilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userProfilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userProfilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PickerSelectedItem = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = title || (name ? renderText(name) : undefined);\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem)) as typeof PickerSelectedItem;\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openPremiumGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenPremiumGiftModal = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenPremiumGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenPremiumGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n  isSynced,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (isSynced && !similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, isSynced, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n      isSynced: global.isSynced,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getChatTitle, getMessageHtmlId, isJoinedChannelMessage } from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger } from '../../util/textFormat';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt, openStarsTransactionFromGift,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    openStarsTransactionFromGift({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n\n        <span className=\"action-message-button\">{oldLang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{\n          oldLang('BoostingReceivedGiftOpenBtn')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport cycleRestrict from '../util/cycleRestrict';\nimport launchMediaWorkers, { MAX_WORKERS } from '../util/launchMediaWorkers';\n\nconst RADIUS = 7;\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n  radius = RADIUS,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    offscreenRef.current = canvas.transferControlToOffscreen();\n\n    const { connector } = launchMediaWorkers()[workerIndex];\n    connector.request({\n      name: 'blurThumb',\n      args: [offscreenRef.current, thumbData, radius],\n      transferables: [offscreenRef.current],\n    });\n  }, [thumbData, isDisabled, radius, workerIndex]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiReaction, ApiSavedReactionTag } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: stars!,\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\nlet onHeavyAnimationStop: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationStop = onHeavyAnimationStop;\n    onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n    prevOnHeavyAnimationStop?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationStop!();\n        onHeavyAnimationStop = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransitionDeprecated","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","text","isDisabled","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","characters","elements","textLength","prevTextLength","i","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","timeoutId","window","setTimeout","clearTimeout","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","useRef","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","userProfilePhotos","profilePhotos","chatProfilePhotos","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","InputText","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","isCategory","category","peerOrCategory","isApiPeerChat","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitleClassName","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","onlyInput","inputPosition","beforeChildren","pickerCategoryTitle","PickerSelectedItem","clickArg","canClose","isMinimized","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","titleClassName","isClickable","fluid","withPeerColors","titleText","titleKey","isAvatarSquare","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openPremiumGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenPremiumGiftModal","forUserIds","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starGiftSticker","selectGiftStickerForStars","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","openStarsTransactionFromGift","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","isGift","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","handleStarGiftClick","formatInteger","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","previewRef","isInline","isUnsupported","useUnsupportedMedia","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","MAX_WORKERS","offscreenRef","transferControlToOffscreen","connector","launchMediaWorkers","request","transferables","useOffscreenCanvasBlur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","amount","currency","purpose","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","getStarsTransactionFromGift","transactionId","isMyGift","isContact","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","onHeavyAnimationStop","isAnimating","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","prevOnHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","navigator","hardwareConcurrency","instances","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}